AutoGen Definitions dummy;
class = {
  cp-id     = 'classability';
  cp-name   = 'ability';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1a467a2d8bf397119e9856d1cf8d2c58bc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ability';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::Sprite > &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will crate an object of class ability.\n


<h2>Parameters:
</h2>
name : std::string \n
-> name of the ability to be loaded.

action : std::vector<sf::Sprite> \n
-> list of sprites that the animation of the ability needs.\n

position : sf::Vector2f \n
-> position of the player, so the ability is loaded on that spot.


<h2>Example:
</h2>
ability a("arno", {...}, {100,100})\n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1a83c4b418a33a2a7f44c3883abfeac4fb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_name';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the name of the ability.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the name of the saved ability.\n


<h2>Return:
</h2>
name : std::String\n
-> name of the ability


<h2>Example:
</h2>
get_name()\n
"walk_up"\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1a0064d2793f684924720a08b059ec2ee0';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'name';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1ae34dc7ddb4b0fdb1b00e70ce1860456e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'move';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'new_position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Move the current ability.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method moves the position of the ability, \n
so that the ability sprite is printed on the same position as the player or NPC.\n


<h2>Parameters:
</h2>
new_position : sf::Vector2f\n
-> new position of the ability sprite


<h2>Example:
</h2>
move({200,200})\n
ability position now set on 200, 200\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1a36d5b1ac8a8a2df0f1790f3ddf320fad';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8cpp_1aed378a7d8a69e8a50347bcc03c0cffb3';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'next_step';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1a0064d2793f684924720a08b059ec2ee0';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'name';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1a5dbf426e4716c3cc09a8ec0dafb148a0';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'current_action_step';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1a5cc662aeebc530c01b7bd5ed9328a54e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Print ability.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method draws the ability on the screen. \n
Because there are likely multiple sprites in an ability, \n
the sprite that have to be printed is handle by the current_action_step value. \n


<h2>Parameters:
</h2>
window : sf::RenderWindow\n
-> window where the ability have to be drawn on.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1a5dbf426e4716c3cc09a8ec0dafb148a0';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'current_action_step';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1a3c6429af67529f039161a35f70caca6f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'add_sprite_to_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Sprite
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 't';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Add a sprite to the action.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will add a new sprite to the action. \n
This method can be used if you think that the animation is not complete enough,\n
and want to add an extra sprite to the animation.\n


<h2>Parameters:
</h2>
t : sf::Sprite\n
-> new sprite that will be added to the ability.


<h2>Example:
</h2>
add_sprite_to_action(example_sprite)\n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1adeb10a7af2d372637d56395792ac918f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::Sprite >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_action';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get list of sprites from an ability.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns a list that contains all sprites from the ability. \n


<h2>Return:
</h2>
action : std::vector<sf::Sprite>\n
-> List of sprites, containing the ability.


<h2>Example:
</h2>
get_action()\n
{sprite1,sprite2,sprite3}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1aaccb2020f374c640eddfce7f1a669821';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1aed378a7d8a69e8a50347bcc03c0cffb3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next_step';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Skip to the next action step.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method moves the current_action_step to the next value. \n


<h2>Example:
</h2>
current_action_step = 5\n
next_step()\n
current_action_step = 6\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'ability_8hpp_1a5dbf426e4716c3cc09a8ec0dafb148a0';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'current_action_step';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1ae34dc7ddb4b0fdb1b00e70ce1860456e';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'move';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classability_1a6eedfacfa97cb7195dee8e9c0cccb54d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~ability';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Decontructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Will be called when the object is deleted. \n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classability_1a0064d2793f684924720a08b059ec2ee0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'name';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '8';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1a83c4b418a33a2a7f44c3883abfeac4fb';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'get_name';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1ae34dc7ddb4b0fdb1b00e70ce1860456e';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'move';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classability_1aaccb2020f374c640eddfce7f1a669821';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::Sprite >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'action';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '9';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1adeb10a7af2d372637d56395792ac918f';
        sec-mem-ref-line = '56';
        sec-mem-ref-name = 'get_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classability_1a36d5b1ac8a8a2df0f1790f3ddf320fad';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1ae34dc7ddb4b0fdb1b00e70ce1860456e';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'move';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classability_1a5dbf426e4716c3cc09a8ec0dafb148a0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'current_action_step';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1ae34dc7ddb4b0fdb1b00e70ce1860456e';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1aed378a7d8a69e8a50347bcc03c0cffb3';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'next_step';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'ability_8cpp_1a5cc662aeebc530c01b7bd5ed9328a54e';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'draw';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
  cp-fileline  = '6';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 90;
        node-label = 'ability';
        node-link = {
          node-link-id = 'classability';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classaction';
  cp-name   = 'action';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classaction_1a326b1acaf626d97dbaa9c52f6f3f90e4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::function< bool() >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'condition';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::function< void() >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'work';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '21';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Template function for bool.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will create a boolean function with a specified use. \n 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classaction_1af9e6424028e398ca05829d3538789840';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::function< void() >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'work';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '31';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Template function for void.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will create a void function with a specified use. \n 
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1cab66c9a7adf408ebb3734e5d95315b';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'work';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classaction_1ad39321beff71da26f4aef37916974f11';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Keyboard::Key
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'key';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::function< void() >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'work';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Template function for key pressing.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will create a boolean function with a specified use. \n
And returns if a specified key is pressed. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1cab66c9a7adf408ebb3734e5d95315b';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'work';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classaction_1a55a91caa9803002fa7ddd6e9e9e46dc6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Mouse::Button
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'button';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::function< void() >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'work';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Template function for mouse button.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will create a boolean function with a specified use. \n
And returns if a specified mouse button is pressed. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1cab66c9a7adf408ebb3734e5d95315b';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'work';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classaction_1a92c003677656b5b3e6e58b19376e6b04';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'operator()';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '63';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Overloader for operator()()
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method creates the operator()() so it can be used in this class. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a949abf979a5255f54e88a6a4273afebe';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'condition';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1cab66c9a7adf408ebb3734e5d95315b';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'work';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classaction_1a949abf979a5255f54e88a6a4273afebe';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::function< bool() >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'condition';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a92c003677656b5b3e6e58b19376e6b04';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'operator()';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classaction_1a1cab66c9a7adf408ebb3734e5d95315b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::function< void() >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'work';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '14';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8hpp_1af9e6424028e398ca05829d3538789840';
        sec-mem-ref-line = '31';
        sec-mem-ref-name = 'action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a92c003677656b5b3e6e58b19376e6b04';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'operator()';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
  cp-fileline  = '11';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 92;
        node-label = 'action';
        node-link = {
          node-link-id = 'classaction';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classcircle';
  cp-name   = 'circle';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classfigure';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classcircle_1a9ebace5a33bb9ab0487d0d1bc7ece817';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'circle';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Color
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'color';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1ae45f54eec971ae74e4d8842300fa4d20';
        sec-mem-ref-line = '38';
        sec-mem-ref-name = 'size_in';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a5799c9f87886fe5c27a4386a491b54ea';
        sec-mem-ref-line = '39';
        sec-mem-ref-name = 'set_color';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a4b47ebebaf7c404bf7f644e8a96df46a';
        sec-mem-ref-line = '40';
        sec-mem-ref-name = 'circ';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classcircle_1a8e0193c47ce75d0aed9b3501dbdd0499';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::FloatRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '43';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classcircle_1a49a37a81d863f524935be5953142886a';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a2196c51490b69027860fdb015913de19';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'figure::position';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classcircle_1ae45f54eec971ae74e4d8842300fa4d20';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size_in';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a9ebace5a33bb9ab0487d0d1bc7ece817';
        sec-mem-ref-line = '31';
        sec-mem-ref-name = 'circle';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classcircle_1a5799c9f87886fe5c27a4386a491b54ea';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Color
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_color';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a9ebace5a33bb9ab0487d0d1bc7ece817';
        sec-mem-ref-line = '31';
        sec-mem-ref-name = 'circle';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classcircle_1a4b47ebebaf7c404bf7f644e8a96df46a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::CircleShape
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'circ';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a9ebace5a33bb9ab0487d0d1bc7ece817';
        sec-mem-ref-line = '31';
        sec-mem-ref-name = 'circle';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
  cp-fileline  = '36';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 94;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 93;
        node-label = 'circle';
        node-link = {
          node-link-id = 'classcircle';
        };
        node-child = {
          child-id = '94';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 96;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 95;
        node-label = 'circle';
        node-link = {
          node-link-id = 'classcircle';
        };
        node-child = {
          child-id = '96';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classdatabase__not__found';
  cp-name   = 'database_not_found';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classdatabase__not__found_1ae070ad0aef4b823f0b5597282a9521b4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database_not_found';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classdatabase__not__found_1a820ce168a5d088576bcbc5ef6a26e4d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'what';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdatabase__not__found_1a28b5ae319795530992f9d614ea1a2a5d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 's';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  cp-fileline  = '9';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 97;
        node-label = 'database_not_found';
        node-link = {
          node-link-id = 'classdatabase__not__found';
        };
        node-child = {
          child-id = '98';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 98;
        node-label = 'exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 99;
        node-label = 'database_not_found';
        node-link = {
          node-link-id = 'classdatabase__not__found';
        };
        node-child = {
          child-id = '100';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 100;
        node-label = 'exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classdialogbox';
  cp-name   = 'dialogbox';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classdialogbox_1a44b14d7932ab0866ba2d3708d406bfb7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dialogbox';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'box_path';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'font_path';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will create a object of this class.


<h2>Parameters:
</h2>
box path : std::string \n
-> The path which contains the background of the dialogbox. \n

font_path : std::string \n
-> The path which contains font of the text in the dialogbox. \n

position : sf::vector2f \n
-> This is the position of the dialogbox on the screen. \n

<h2>Example:
</h2>
dialogbox d("background.png", "font.ttf", {200, 800});
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a37ebf2968cfa80f0cdde35d2722f40ad';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'font';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a11fd386b5bb381072262a574ea25c8c3';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'font_path';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a710d3c7c4f21676a560d6825ff22a152';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'text';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a05031b5d9149389d301638da9005e744';
        sec-mem-ref-line = '12';
        sec-mem-ref-name = 'position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classdialogbox_1a722438dee05d120c77871b1ec9d26cf5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draw the dialogbox.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method draws the dialogbox on the screen.


<h2>Parameters:
</h2>
window : sf::RenderWindow& \n
-> The window where the dialogbox is shown on. \n


<h2>Example:
</h2>
dialogbox.draw(window);
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1aa0686bdcc541c36e19ba3122befe1978';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'box';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a710d3c7c4f21676a560d6825ff22a152';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'text';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'game::view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'game::interact';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classdialogbox_1ab9d8f8b65c3a54ccaea57a941d43a176';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'text_input';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sentence';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'char_size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Color
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'color';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set text in the dialogbox.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method sets a given text in a dialogbox. \n
Also is the font size given and in what color the text should appear. \n


<h2>Parameters:
</h2>
sentence : std::string \n
-> The sentence which is shown in the dialogbox. 

char_size : int \n
-> The size of the characters in the dialogbox. 

color : sf::Color \n
-> The color of the text. 


<h2>Example:
</h2>
text_input("hey", 30, sf::Color::Red);
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a227a4bab170830377e3b954c80341570';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'last_text';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a710d3c7c4f21676a560d6825ff22a152';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'text';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'game::view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'game::interact';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classdialogbox_1aeb83bd7a568feeb4be10a0335838ae2a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::FloatRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get bounds of dialogbox.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will return the boundary of the text in the dialogbox.

<h2>Return:
</h2>
sf::FloatRect : sf::FloatRect
-> The boundary of the text in the dialogbox.


<h2>Example:
</h2>
getBounds();
-> (100,100,50,50)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8hpp_1a710d3c7c4f21676a560d6825ff22a152';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'text';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdialogbox_1a227a4bab170830377e3b954c80341570';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'last_text';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1ab9d8f8b65c3a54ccaea57a941d43a176';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'text_input';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdialogbox_1a710d3c7c4f21676a560d6825ff22a152';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Text
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'text';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a44b14d7932ab0866ba2d3708d406bfb7';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'dialogbox';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a722438dee05d120c77871b1ec9d26cf5';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1ab9d8f8b65c3a54ccaea57a941d43a176';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'text_input';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1aeb83bd7a568feeb4be10a0335838ae2a';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'getBounds';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdialogbox_1a37ebf2968cfa80f0cdde35d2722f40ad';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Font
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'font';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a44b14d7932ab0866ba2d3708d406bfb7';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'dialogbox';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdialogbox_1a11fd386b5bb381072262a574ea25c8c3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'font_path';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a44b14d7932ab0866ba2d3708d406bfb7';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'dialogbox';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdialogbox_1a05031b5d9149389d301638da9005e744';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '12';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a44b14d7932ab0866ba2d3708d406bfb7';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'dialogbox';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classdialogbox_1aa0686bdcc541c36e19ba3122befe1978';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'box';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a722438dee05d120c77871b1ec9d26cf5';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'draw';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
  cp-fileline  = '8';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 103;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '104';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 104;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 102;
        node-label = 'dialogbox';
        node-link = {
          node-link-id = 'classdialogbox';
        };
        node-child = {
          child-id = '103';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-box
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classend__of__file';
  cp-name   = 'end_of_file';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  cp-fileline  = '5';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 106;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 105;
        node-label = 'end_of_file';
        node-link = {
          node-link-id = 'classend__of__file';
        };
        node-child = {
          child-id = '106';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 108;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 107;
        node-label = 'end_of_file';
        node-link = {
          node-link-id = 'classend__of__file';
        };
        node-child = {
          child-id = '108';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classstd_1_1exception';
  cp-name   = 'std::exception';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classdatabase__not__found';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classend__of__file';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classinvalid__position';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classunknown__shape';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classunknown__tile';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  cp-fileline  = '50';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 114;
        node-label = 'unknown_tile';
        node-link = {
          node-link-id = 'classunknown__tile';
        };
        node-child = {
          child-id = '109';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 110;
        node-label = 'database_not_found';
        node-link = {
          node-link-id = 'classdatabase__not__found';
        };
        node-child = {
          child-id = '109';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 109;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 113;
        node-label = 'unknown_shape';
        node-link = {
          node-link-id = 'classunknown__shape';
        };
        node-child = {
          child-id = '109';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 111;
        node-label = 'end_of_file';
        node-link = {
          node-link-id = 'classend__of__file';
        };
        node-child = {
          child-id = '109';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 112;
        node-label = 'invalid_position';
        node-link = {
          node-link-id = 'classinvalid__position';
        };
        node-child = {
          child-id = '109';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 115;
        node-label = 'exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classfigure';
  cp-name   = 'figure';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classcircle';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classpicture';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'classrectangle';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classfigure_1a73a600829aee74a3ac635b4a7d0719b8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'figure';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '9';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classfigure_1aca9a3924bc0883e1aa8e93c04887abbc';
      sec-mem-virt = pure-virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual sf::FloatRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classfigure_1a56d8a53a8bf2b82178aa476bac071596';
      sec-mem-virt = pure-virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '14';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classfigure_1ac7592a3b4cb4210fbd114c42d015c4e7';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'move';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delta';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a2196c51490b69027860fdb015913de19';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classfigure_1a2290acc133127e643fab20c7ce9ab975';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'jump';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'target';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a2196c51490b69027860fdb015913de19';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a25bfb0a452b2b2fe60f7f01b08dab423';
        sec-mem-ref-line = '88';
        sec-mem-ref-name = 'jump';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classfigure_1a25bfb0a452b2b2fe60f7f01b08dab423';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
virtual void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'jump';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2i
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'target';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1a2290acc133127e643fab20c7ce9ab975';
        sec-mem-ref-line = '84';
        sec-mem-ref-name = 'jump';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classfigure_1a2196c51490b69027860fdb015913de19';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac6bf4571731b8283feb4c20d1391fa8b';
        sec-mem-ref-line = '275';
        sec-mem-ref-name = 'leveleditor::get_position_from_rectangle_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1ac7592a3b4cb4210fbd114c42d015c4e7';
        sec-mem-ref-line = '53';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a49a37a81d863f524935be5953142886a';
        sec-mem-ref-line = '69';
        sec-mem-ref-name = 'circle::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1aac9bb03014c071fdf932f6cfa3f34f55';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'rectangle::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a2290acc133127e643fab20c7ce9ab975';
        sec-mem-ref-line = '84';
        sec-mem-ref-name = 'jump';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classfigure_1aaaf0bac968262da5781ddcfbb6bcb687';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'selected';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
  cp-fileline  = '7';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 118;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '116';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 116;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 119;
        node-label = 'rectangle';
        node-link = {
          node-link-id = 'classrectangle';
        };
        node-child = {
          child-id = '116';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 117;
        node-label = 'circle';
        node-link = {
          node-link-id = 'classcircle';
        };
        node-child = {
          child-id = '116';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 120;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classgame';
  cp-name   = 'game';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a46eaf7a077e7f3ff0b5e229142358f00';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'game';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'levelsize';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '292';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The constructor of the 'game' class, this creates a game object.\n


<h2>Parameters:
</h2>
levelsize :  sf::Vector2f \n
-> The size of the level

database : sql & \n
-> A 'SQ' object, this will be used to get information from the database

window :sf::RenderWindow \n
-> The window on which the game has to be drawn


<h2>Example:
</h2>
game(window, database, levelsize) \n
- > This will create a 'game' object
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aa6c2206b4735cd2c90f934384c350e0a';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9928c456c632f88d19cce26b8165bd6f';
        sec-mem-ref-line = '394';
        sec-mem-ref-name = 'sql::get_level_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a839db13cc77624fa6a671b46bbf02b28';
        sec-mem-ref-line = '31';
        sec-mem-ref-name = 'background_values_map';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a5eb7fea00a56fe6ba33f602871798bc8';
        sec-mem-ref-line = '452';
        sec-mem-ref-name = 'sql::get_level_background_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ab83d40295556a456fd5f976335609ab1';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'collision_objects';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1af126860a2afcf82e53c9f895577bab76';
        sec-mem-ref-line = '502';
        sec-mem-ref-name = 'sql::get_collision_objects';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a0eb06f984d04128ba7fba6fcca04bda3';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'get_items_from_database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a7fcd329ec94a2aa84d486e67978d417a';
        sec-mem-ref-line = '32';
        sec-mem-ref-name = 'object_values_map';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1dd21fbf729e949d804ba5509af2b295';
        sec-mem-ref-line = '401';
        sec-mem-ref-name = 'sql::get_level_object_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a961d3da89b2af402aff6c9f7c2a2b81c';
        sec-mem-ref-line = '30';
        sec-mem-ref-name = 'collision_backgrounds';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9f75a32a77a498b1a328a53ade518ce7';
        sec-mem-ref-line = '636';
        sec-mem-ref-name = 'sql::get_quest_parts';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a59249e218b1bb9d811c50b5615312eaf';
        sec-mem-ref-line = '607';
        sec-mem-ref-name = 'sql::get_quest_text';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a601fdbb561a442a318906ad9b57536f0';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'begin_stories';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a3718980f99cd44e9c882c2aa67368450';
        sec-mem-ref-line = '263';
        sec-mem-ref-name = 'load_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
        sec-mem-ref-line = '257';
        sec-mem-ref-name = 'draw_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'draw_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ac607d12774a2ebf6fb3cf24a60f47fed';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'game_view';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abccd2ff11b53d33fde0ee8ab50c29972';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'levelsize';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aead46333e3eb81e970a9d10d0b2481c9';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'dialogbox_view';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'game_loop';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '305';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Loop that handles the game.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This funtion will execute everything that will be needed to run the game, \n
like drawing the window, loading the NPC's and working with them


<h2>Example:
</h2>
game_loop() \n
- > This will start the game
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ae82c66167f3bf9cd4892a9e0ec6c3ba6';
        sec-mem-ref-line = '35';
        sec-mem-ref-name = 'game_begin';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ac607d12774a2ebf6fb3cf24a60f47fed';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'game_view';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4cf9147e06874edfc6190db64d719dec';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'move_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
        sec-mem-ref-line = '257';
        sec-mem-ref-name = 'draw_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        sec-mem-ref-line = '269';
        sec-mem-ref-name = 'player_skill';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'draw_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1a519784459639f6b785bcfeaa05b6f604';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'player::respawn';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a4bfc9c9555fc75525ba0d8719827e749';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'inv';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'inventory::get_inventory';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a0eb06f984d04128ba7fba6fcca04bda3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_items_from_database';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string >> &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_values_map';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '323';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the items from the database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function gets all the items from the database and places it in a std::map.\n


<h2>Parameters:
</h2>
item_values_map :  std::map<std::string, std::vector<std::string>> & \n
-> The map that contains all the items and its location


<h2>Example:
</h2>
get_items_from_database(background_values_map) \n
- > The std::map will be filled with the items
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ad39555b6aeb922c481a4f37500280d96';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'background_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1ae263cdc30dcc916b98b0ddbbf0a6fccc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mouse_intersects_left_edge';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checkt left edge of screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function checks if the mouse intersects with the left edge of the screen.\n

<h2>Parameters:
</h2>
view : sf::View&\n
-> The view is given with the function.

<h2>Example:
</h2>
mouse_intersects_left_edge(view1);
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'get_mouse_position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a273013552bc7ad8fef9d9192aad3cc0c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mouse_intersects_right_edge';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '69';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checkt right edge of screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function checks if the mouse intersects with the right edge of the screen.\n

<h2>Parameters:
</h2>
view : sf::View&\n
-> The view is given with the function.

<h2>Example:
</h2>
mouse_intersects_right_edge(view1);
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'get_mouse_position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abccd2ff11b53d33fde0ee8ab50c29972';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'levelsize';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1abb1c33c5a73de27e4ebd20e1b61dc3dc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mouse_intersects_upper_edge';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checkt upper edge of screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function checks if the mouse intersects with the upper edge of the screen.\n

<h2>Parameters:
</h2>
view : sf::View&\n
-> The view is given with the function.

<h2>Example:
</h2>
mouse_intersects_upper_edge(view1);
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'get_mouse_position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a34a5241e205d0985a9e477a3dd77ba08';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'mouse_intersects_down_edge';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checkt buttom edge of screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function checks if the mouse intersects with the down edge of the screen.\n

<h2>Parameters:
</h2>
view : sf::View&\n
-> The view is given with the function.

<h2>Example:
</h2>
mouse_intersects_down_edge(view1);
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'get_mouse_position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abccd2ff11b53d33fde0ee8ab50c29972';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'levelsize';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a69793e75c155cb06e4f2c4d98c5da27c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'game_viewer';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Activate game_viewr.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function is used to activate the game_viewer. \n

<h2>Example:
</h2>
game_viewer();
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1ae263cdc30dcc916b98b0ddbbf0a6fccc';
        sec-mem-ref-line = '105';
        sec-mem-ref-name = 'mouse_intersects_left_edge';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ac607d12774a2ebf6fb3cf24a60f47fed';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'game_view';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a273013552bc7ad8fef9d9192aad3cc0c';
        sec-mem-ref-line = '109';
        sec-mem-ref-name = 'mouse_intersects_right_edge';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1abb1c33c5a73de27e4ebd20e1b61dc3dc';
        sec-mem-ref-line = '113';
        sec-mem-ref-name = 'mouse_intersects_upper_edge';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a34a5241e205d0985a9e477a3dd77ba08';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'mouse_intersects_down_edge';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_npc';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '125';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draw NPC's on the window.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function will go through a vector which contains NPC objects, 
their draw function will be called on all of them one by one.\n


<h2>Example:
</h2>
draw_npc() \n
-> Drawing the NPC's on the window
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af427a7b929715c637cb10a4894386ead';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'npc_list';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'perform_player_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a5b71f711786b1b48343dd02d31551a69';
        sec-mem-ref-line = '344';
        sec-mem-ref-name = 'perform_npc_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a3718980f99cd44e9c882c2aa67368450';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_npc';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '137';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all the NPC's.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function will retrieve all the NPC's from the database and put them in the 'npc_list' vector.\n


<h2>Example:
</h2>
load_npc() \n
-> The npc_list vector will be filled with NPC objects from the database
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aa6c2206b4735cd2c90f934384c350e0a';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae854372bac3fc5e681287e3cbf5b03de';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'sql::get_number_of_npcs';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af427a7b929715c637cb10a4894386ead';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'npc_list';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1af99a7ac774385373a015bd3082049bd2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view_start_dialogs';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Show beginning dialogues.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function shows the the dialogs that will be shown in the beginning of the game.\n


<h2>Example:
</h2>
view_start_dialogs() \n
-> Dialogues will be shown on the bottom of the screen
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a601fdbb561a442a318906ad9b57536f0';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'begin_stories';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'x';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8cpp_1ab9d8f8b65c3a54ccaea57a941d43a176';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'dialogbox::text_input';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aead46333e3eb81e970a9d10d0b2481c9';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'dialogbox_view';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a722438dee05d120c77871b1ec9d26cf5';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'dialogbox::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4cf9147e06874edfc6190db64d719dec';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
        sec-mem-ref-line = '257';
        sec-mem-ref-name = 'draw_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'draw_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'perform_player_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a6a2c7019e201b42b13d3032fc538298d';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'get_move_direction_from_button_keys';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'move_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        sec-mem-ref-line = '269';
        sec-mem-ref-name = 'player_skill';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ae82c66167f3bf9cd4892a9e0ec6c3ba6';
        sec-mem-ref-line = '35';
        sec-mem-ref-name = 'game_begin';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a4cf9147e06874edfc6190db64d719dec';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_background_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Show the store on the window.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function retrieves the background of the store from the vector it's in and displays it on the screen.\n


<h2>Example:
</h2>
draw_background_store() \n
-> The store will be shown on the window
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ad39555b6aeb922c481a4f37500280d96';
        sec-mem-ref-line = '27';
        sec-mem-ref-name = 'background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'perform_player_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a5b71f711786b1b48343dd02d31551a69';
        sec-mem-ref-line = '344';
        sec-mem-ref-name = 'perform_npc_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1ab13015cdc535671de1dd7a5a7970a238';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'move_player';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '174';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Moves the player.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function will move the player as long as there's no collision. \n
When there's a collision the player will be set back to its previous position before the collision.\n


<h2>Example:
</h2>
move_player() \n
-> Move the player
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af427a7b929715c637cb10a4894386ead';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'npc_list';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1ad93507550867df5598b86b73de01ec12';
        sec-mem-ref-line = '42';
        sec-mem-ref-name = 'player::get_interaction';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1a961d3da89b2af402aff6c9f7c2a2b81c';
        sec-mem-ref-line = '30';
        sec-mem-ref-name = 'collision_backgrounds';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1aa405bc495c5a6bced7740352abd4249f';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'player::get_collision';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1ab83d40295556a456fd5f976335609ab1';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'collision_objects';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1aa673c84d7b56badc58d7c467325cbf88';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'player::set_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a147658cb884fa19f4a0a255ea858b7b8';
        sec-mem-ref-line = '35';
        sec-mem-ref-name = 'get_action_name_from_button_keys';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1a0f6538451ec51b4407cca22294451443';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'player::move';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1a6a2c7019e201b42b13d3032fc538298d';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'get_move_direction_from_button_keys';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1a3bf8cc80800146684a3dbf28c0c4a83c';
        sec-mem-ref-line = '32';
        sec-mem-ref-name = 'player::set_last_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a4982a1c81b1a52b8f050ef48dea86743';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_player';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '187';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draws the player on the screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function calls the draw function from the 'player' class, 
which will then draw the player on the screen.


<h2>Example:
</h2>
move_player() \n
-> Player will be shown on the screen
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1a67423ce10d4abb42775868f978d04247';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'player::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a50870549f1abdbc924743d8173ced15d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'perform_player_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '205';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Show the sprite that belongs to the action.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function shows the action the belongs to the state of the player, \n
if he walks up, the sprite will be shown of the player walking up. \n


<h2>Parameters:
</h2>
action : std::string\n
-> The name of the action that must be performed

<h2>Example:
</h2>
perform_player_action("walk_up") \n
- > The player will be shown doing something, like walking up, walking down or dying
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1a676129193d589a975d7a86429a37b1b7';
        sec-mem-ref-line = '59';
        sec-mem-ref-name = 'player::get_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1afc7732284851b7f0d90b66a5d25931e2';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'player::get_current_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1aa673c84d7b56badc58d7c467325cbf88';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'player::set_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4cf9147e06874edfc6190db64d719dec';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
        sec-mem-ref-line = '257';
        sec-mem-ref-name = 'draw_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1a4659a0677d5b19b0ae27737dfaa0176e';
        sec-mem-ref-line = '68';
        sec-mem-ref-name = 'player::show_ability';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        sec-mem-ref-line = '269';
        sec-mem-ref-name = 'player_skill';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a5b71f711786b1b48343dd02d31551a69';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'perform_npc_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'npc_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '227';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Show the sprite that belongs to the action.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function shows the action the belongs to the state of the NPC, 
if it walks up, the sprite will be shown of the NPC walking up.\n


<h2>Parameters:
</h2>
action : std::string\n
-> The name of the action that must be performed.

npc_name : std::string\n
-> The name of the NPC on which this function must be executed.


<h2>Example:
</h2>
perform_npc_action("henk", "walk_up") \n
- > The NPC will be shown doing something, like walking up, walking down or dying
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af427a7b929715c637cb10a4894386ead';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'npc_list';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4cf9147e06874edfc6190db64d719dec';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
        sec-mem-ref-line = '257';
        sec-mem-ref-name = 'draw_npc';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a478a3366ffd0e10713b0abc3adb65696';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'player_skill';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '236';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Show action if action button pressed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will let the player perform a certain skill if the consisting button is pressed. \n
The consisting keys and buttons are defined in button_actions.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8cpp_1aac3d825fa7b0f54fd0340a611b9639d5';
        sec-mem-ref-line = '25';
        sec-mem-ref-name = 'get_skill_from_button_keys';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1afc7732284851b7f0d90b66a5d25931e2';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'player::get_current_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'perform_player_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1a61adfafa4d31548fc94c853f10b9bf3b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'interact';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Interact with a NPC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call the 'interact' function to see if the player can interact with a player.\n


<h2>Example:
</h2>
player.interact() \n
-> Executing the function which will show text on the screen
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af427a7b929715c637cb10a4894386ead';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'npc_list';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1ad93507550867df5598b86b73de01ec12';
        sec-mem-ref-line = '42';
        sec-mem-ref-name = 'player::get_interaction';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aa6c2206b4735cd2c90f934384c350e0a';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9f75a32a77a498b1a328a53ade518ce7';
        sec-mem-ref-line = '636';
        sec-mem-ref-name = 'sql::get_quest_parts';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a59249e218b1bb9d811c50b5615312eaf';
        sec-mem-ref-line = '607';
        sec-mem-ref-name = 'sql::get_quest_text';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8cpp_1ab9d8f8b65c3a54ccaea57a941d43a176';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'dialogbox::text_input';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aead46333e3eb81e970a9d10d0b2481c9';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'dialogbox_view';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a722438dee05d120c77871b1ec9d26cf5';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'dialogbox::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'draw_player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classgame_1aa78cf955c292ac2bd75fa385a946cd6e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'interact';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '266';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Interact with a object or tile.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call the 'interact' function to see if the player can interact with a player.\n


<h2>Parameters:
</h2>
item_name : std::string\n
-> The name of an item which will be given to the player


<h2>Example:
</h2>
player.interact("banana") \n
- > Give the player an item and update this in the database
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af427a7b929715c637cb10a4894386ead';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'npc_list';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1abea612890f55555c354cb24bd521b784';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'arno';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8cpp_1ad93507550867df5598b86b73de01ec12';
        sec-mem-ref-line = '42';
        sec-mem-ref-name = 'player::get_interaction';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aa6c2206b4735cd2c90f934384c350e0a';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9f75a32a77a498b1a328a53ade518ce7';
        sec-mem-ref-line = '636';
        sec-mem-ref-name = 'sql::get_quest_parts';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a59249e218b1bb9d811c50b5615312eaf';
        sec-mem-ref-line = '607';
        sec-mem-ref-name = 'sql::get_quest_text';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8cpp_1ab9d8f8b65c3a54ccaea57a941d43a176';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'dialogbox::text_input';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1af7435cad08a8114c7598bc99f5b6496e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8hpp_1aead46333e3eb81e970a9d10d0b2481c9';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'dialogbox_view';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a722438dee05d120c77871b1ec9d26cf5';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'dialogbox::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1af0e753f3af81ff1ff7f7582dcea4b0ed';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'sql::add_item_to_inventory';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'draw_player';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1abea612890f55555c354cb24bd521b784';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
player
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'arno';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        sec-mem-ref-line = '269';
        sec-mem-ref-name = 'player_skill';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'move_player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'draw_player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'perform_player_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a2ea8501912521b1b00dcd29284039234';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
dialogbox
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dialogbox';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '20';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1aa6c2206b4735cd2c90f934384c350e0a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '21';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a3718980f99cd44e9c882c2aa67368450';
        sec-mem-ref-line = '263';
        sec-mem-ref-name = 'load_npc';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1af7435cad08a8114c7598bc99f5b6496e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'window';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '22';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ae263cdc30dcc916b98b0ddbbf0a6fccc';
        sec-mem-ref-line = '105';
        sec-mem-ref-name = 'mouse_intersects_left_edge';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a273013552bc7ad8fef9d9192aad3cc0c';
        sec-mem-ref-line = '109';
        sec-mem-ref-name = 'mouse_intersects_right_edge';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1abb1c33c5a73de27e4ebd20e1b61dc3dc';
        sec-mem-ref-line = '113';
        sec-mem-ref-name = 'mouse_intersects_upper_edge';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a34a5241e205d0985a9e477a3dd77ba08';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'mouse_intersects_down_edge';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a4cf9147e06874edfc6190db64d719dec';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a3718980f99cd44e9c882c2aa67368450';
        sec-mem-ref-line = '263';
        sec-mem-ref-name = 'load_npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'perform_player_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a5b71f711786b1b48343dd02d31551a69';
        sec-mem-ref-line = '344';
        sec-mem-ref-name = 'perform_npc_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1ac607d12774a2ebf6fb3cf24a60f47fed';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'game_view';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '23';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a69793e75c155cb06e4f2c4d98c5da27c';
        sec-mem-ref-line = '98';
        sec-mem-ref-name = 'game_viewer';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1aead46333e3eb81e970a9d10d0b2481c9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'dialogbox_view';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '24';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a4bfc9c9555fc75525ba0d8719827e749';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
inventory
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'inv';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '25';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1abccd2ff11b53d33fde0ee8ab50c29972';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'levelsize';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '26';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a273013552bc7ad8fef9d9192aad3cc0c';
        sec-mem-ref-line = '109';
        sec-mem-ref-name = 'mouse_intersects_right_edge';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a34a5241e205d0985a9e477a3dd77ba08';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'mouse_intersects_down_edge';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1ad39555b6aeb922c481a4f37500280d96';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< picture * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'background_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a0eb06f984d04128ba7fba6fcca04bda3';
        sec-mem-ref-line = '236';
        sec-mem-ref-name = 'get_items_from_database';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a4cf9147e06874edfc6190db64d719dec';
        sec-mem-ref-line = '250';
        sec-mem-ref-name = 'draw_background_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1af427a7b929715c637cb10a4894386ead';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< npc * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'npc_list';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '28';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a961fe8a42a2c0bc1ef62ef17c7c64f06';
        sec-mem-ref-line = '257';
        sec-mem-ref-name = 'draw_npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a3718980f99cd44e9c882c2aa67368450';
        sec-mem-ref-line = '263';
        sec-mem-ref-name = 'load_npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'move_player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a5b71f711786b1b48343dd02d31551a69';
        sec-mem-ref-line = '344';
        sec-mem-ref-name = 'perform_npc_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1ab83d40295556a456fd5f976335609ab1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::IntRect >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'collision_objects';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '29';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'move_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a961d3da89b2af402aff6c9f7c2a2b81c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::IntRect >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'collision_backgrounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'move_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a839db13cc77624fa6a671b46bbf02b28';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'background_values_map';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '31';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a7fcd329ec94a2aa84d486e67978d417a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'object_values_map';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '32';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a601fdbb561a442a318906ad9b57536f0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'begin_stories';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '33';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1ae82c66167f3bf9cd4892a9e0ec6c3ba6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'game_begin';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= false
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '35';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'view_start_dialogs';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1ac28a00d246bdb9b92858bd876c6edd0e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'first_dialog_done';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= false
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '36';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classgame_1a278222f919fb52fb2f87e45be40fb571';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'count';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
  cp-fileline  = '17';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 126;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 124;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '125';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 125;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 123;
        node-label = 'dialogbox';
        node-link = {
          node-link-id = 'classdialogbox';
        };
        node-child = {
          child-id = '124';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-box
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 122;
        node-label = 'game';
        node-link = {
          node-link-id = 'classgame';
        };
        node-child = {
          child-id = '123';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-dialogbox
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '126';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '127';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-inv
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '128';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-arno
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 129;
        node-label = 'npc';
        node-link = {
          node-link-id = 'classnpc';
        };
        node-child = {
          child-id = '126';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 127;
        node-label = 'inventory';
        node-link = {
          node-link-id = 'classinventory';
        };
        node-child = {
          child-id = '126';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 128;
        node-label = 'player';
        node-link = {
          node-link-id = 'classplayer';
        };
        node-child = {
          child-id = '126';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '129';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-player_npc
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classinvalid__position';
  cp-name   = 'invalid_position';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classinvalid__position_1afdef78718233d3cf1f8e77ec0af4963d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'invalid_position';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'c';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classinvalid__position_1a06163ba7cde1c818d7fd52b13686aad4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'what';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinvalid__position_1a583ac2c97b1c840be45d66f39c079082';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 's';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '25';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  cp-fileline  = '23';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 131;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 130;
        node-label = 'invalid_position';
        node-link = {
          node-link-id = 'classinvalid__position';
        };
        node-child = {
          child-id = '131';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 133;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 132;
        node-label = 'invalid_position';
        node-link = {
          node-link-id = 'classinvalid__position';
        };
        node-child = {
          child-id = '133';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classinventory';
  cp-name   = 'inventory';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classinventory_1a0c767f0886d01023984f4b06372ca626';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'inventory';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will crate an object of class inventory.\n


<h2>Parameters:
</h2>
window : sf::Renderwindow& \n
-> window the inventory hs to be drawn one.

database : sql& \n
-> refference to the sqlite database.\n


<h2>Example:
</h2>
inventory inv(window, database)\n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classinventory_1abb6d846e4b7297f79c2c9fb34b26fee2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_inventory';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void get_inventory() : Get the inventory
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the items in the inventory

<h2>Example:
</h2>
get_inventory(1) \n
-> Shows the items in the inventory
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8hpp_1a6d18133706ef066978817d32130bf560';
        sec-mem-ref-line = '12';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a7f818b967453b1ae15ce4c5b28cf4765';
        sec-mem-ref-line = '114';
        sec-mem-ref-name = 'sql::get_inventory';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8hpp_1ac9ae72d119fe30ef46df9b8c05faed61';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'inventory_vector';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8hpp_1a1c0ceddc587277e92c8a389eb7a9b139';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'inventory_texture';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8hpp_1adb8d5ebeb0dada8462c1f4246d87c8e4';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'inventory_sprite';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8hpp_1a699933dd5f2c8a98088ec92cbf2d5bcc';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'item_8cpp_1aafc61a4b7e2bd10300a6767e6dd7281e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'item::get_sprite';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'inventory_8hpp_1abc26ad2f285ce00ab783726872007d89';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'counter';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game::game_loop';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinventory_1a699933dd5f2c8a98088ec92cbf2d5bcc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'window';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_inventory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinventory_1a6d18133706ef066978817d32130bf560';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '12';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_inventory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinventory_1ac9ae72d119fe30ef46df9b8c05faed61';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< item >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'inventory_vector';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_inventory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinventory_1abc26ad2f285ce00ab783726872007d89';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'counter';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 1
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_inventory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinventory_1adb8d5ebeb0dada8462c1f4246d87c8e4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Sprite
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'inventory_sprite';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_inventory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classinventory_1a1c0ceddc587277e92c8a389eb7a9b139';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Texture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'inventory_texture';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_inventory';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
  cp-fileline  = '9';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 136;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 135;
        node-label = 'inventory';
        node-link = {
          node-link-id = 'classinventory';
        };
        node-child = {
          child-id = '136';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classitem';
  cp-name   = 'item';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classitem_1a235883f911ed8fad4679655a57d23d96';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'item';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'id';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '33';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will crate an object of class item.\n


<h2>Parameters:
</h2>
id : std::string \n
-> id of the item in the database.

database : sql& \n
-> refference to the sqlite database.\n


<h2>Example:
</h2>
item banana("1", database)\n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classitem_1ab7c2fa653e0f9a565283b60ca325f2a7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_name';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
std::string get_name() : Get the name from an item
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the name of an item by using its ID

<h2>Return:
</h2>
name : std::vector<std::string> \n
-> The name of the requested item

<h2>Example:
</h2>
get_name() \n
-> tokato_gloves
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'item_8hpp_1a0a822c97c7e59706475fc5e541926df3';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a7b49bcf5ac10f6421a5ecd62865e3316';
        sec-mem-ref-line = '124';
        sec-mem-ref-name = 'sql::get_name_from_id_inventory';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231';
        sec-mem-ref-line = '7';
        sec-mem-ref-name = 'name';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classitem_1aa5a9140482a7d88d6a3eea342cb0c082';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_in_game_name';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
std::string get_name() : Get the in game name from an item
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the in game name of an item by using its ID

<h2>Return:
</h2>
name : std::vector<std::string> \n
-> The in game name of the requested item

<h2>Example:
</h2>
get_in_game_name() \n
-> Tokato Gloves
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'item_8hpp_1a0a822c97c7e59706475fc5e541926df3';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a62cd4910a9310621ca22fb3c322f52a4';
        sec-mem-ref-line = '144';
        sec-mem-ref-name = 'sql::get_in_game_name_from_id_inventory';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231';
        sec-mem-ref-line = '7';
        sec-mem-ref-name = 'name';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classitem_1aafc61a4b7e2bd10300a6767e6dd7281e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Sprite
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_sprite';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'counter';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
std::string get_sprite() : Get the sprite from an item
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the sprite of an item by using its ID

<h2>Return:
</h2>
sprite : sf::Sprite \n
-> The sprite of the requested item

<h2>Example:
</h2>
get_sprite() \n
-> sf::Sprite
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'item_8hpp_1a0a822c97c7e59706475fc5e541926df3';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a060764a845c3a26c99c6f15470df9634';
        sec-mem-ref-line = '134';
        sec-mem-ref-name = 'sql::get_sprite_inventory';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'item_8hpp_1af2fe0df797bc29b4b907e03823df5c3c';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'texture';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'item_8hpp_1adb991244770ef45558a35510f38ffb04';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'sprite';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'inventory::get_inventory';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classitem_1af512775a194b958ca9630d59ed0daf27';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'id';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '7';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classitem_1a0a822c97c7e59706475fc5e541926df3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '8';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1ab7c2fa653e0f9a565283b60ca325f2a7';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'get_name';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1aa5a9140482a7d88d6a3eea342cb0c082';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'get_in_game_name';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1aafc61a4b7e2bd10300a6767e6dd7281e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'get_sprite';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classitem_1adb991244770ef45558a35510f38ffb04';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Sprite
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sprite';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1aafc61a4b7e2bd10300a6767e6dd7281e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'get_sprite';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classitem_1af2fe0df797bc29b4b907e03823df5c3c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Texture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'texture';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1aafc61a4b7e2bd10300a6767e6dd7281e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'get_sprite';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
  cp-fileline  = '5';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 139;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 138;
        node-label = 'item';
        node-link = {
          node-link-id = 'classitem';
        };
        node-child = {
          child-id = '139';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classleveleditor';
  cp-name   = 'leveleditor';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a5dfc809a9bac07ffa88ce921c077f017';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'leveleditor';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'levelsize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tilesize';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '365';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>This will create a leveleditor object. \n Parameters:
</h2>
levelsize : sf::Vector2f \n
-> Give the levelsize with the function.  \n

tilesize : sf::Vector2f \n
-> Give the tilesize with the function. \n

window : sf::RenderWindow& \n
-> Give a window with the function where the leveleditor needs to be drawn at.  \n

database : sql& \n
-> Give the database to the function.\n

<h2>Example:
</h2>
leveleditor({1080,1080}, {32,32}, window, database); \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a8ba58913d3035bc9ae363e1ce72279d3';
        sec-mem-ref-line = '87';
        sec-mem-ref-name = 'back_to_menu_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aa227a29f049d0b381c05b0e08ea12775';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'new_game_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1adc1e2055b7a34c0719af86f0778b8954';
        sec-mem-ref-line = '90';
        sec-mem-ref-name = 'load_game_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a675038d66c5ea045d4e3b922e28a23ec';
        sec-mem-ref-line = '186';
        sec-mem-ref-name = 'load_rectangles';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ad34dad62ef7c5ea26250b97e9803776a';
        sec-mem-ref-line = '223';
        sec-mem-ref-name = 'load_tile_list';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a8a6367bede4a3a13c41f764f1ac628a4';
        sec-mem-ref-line = '338';
        sec-mem-ref-name = 'view1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1ace10ab3736e90b40682ab9733b46d8f0';
        sec-mem-ref-line = '72';
        sec-mem-ref-name = 'levelsize';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aa6730359d22f4ea8f82347e29af75afa';
        sec-mem-ref-line = '339';
        sec-mem-ref-name = 'view2';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a2051eecaa725f921ef9520030c713a0b';
        sec-mem-ref-line = '340';
        sec-mem-ref-name = 'view3';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a73061ee47d22e443922a460cb97d2ed3';
        sec-mem-ref-line = '341';
        sec-mem-ref-name = 'view4';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a2ee968e4a8d305cdb1465397388b63f2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'editor_loop';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '374';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The main loop for the editor to stay working.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Example:
</h2>
editor_loop(); \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a8a6367bede4a3a13c41f764f1ac628a4';
        sec-mem-ref-line = '338';
        sec-mem-ref-name = 'view1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa5cd17c0004af09a706230a93abb10ee';
        sec-mem-ref-line = '337';
        sec-mem-ref-name = 'get_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ae819c7275982ef9e2891017985560c6d';
        sec-mem-ref-line = '313';
        sec-mem-ref-name = 'draw_rectangle_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1afa6c25fa02db7ad3d904d6bb91b79643';
        sec-mem-ref-line = '319';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a3478cade84f5ff58c06df2c173c9127d';
        sec-mem-ref-line = '325';
        sec-mem-ref-name = 'draw_temporary_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a31762448e212fa345f3a3b6d5ce81d66';
        sec-mem-ref-line = '92';
        sec-mem-ref-name = 'pressed_load_game';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a73061ee47d22e443922a460cb97d2ed3';
        sec-mem-ref-line = '341';
        sec-mem-ref-name = 'view4';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1b1594767de698a60f38e91690a55a36';
        sec-mem-ref-line = '86';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a29fe43df701460704744049aec28d58e';
        sec-mem-ref-line = '389';
        sec-mem-ref-name = 'sql::get_available_levels';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a02e37e18772af606dce2ee96d59dc7ae';
        sec-mem-ref-line = '80';
        sec-mem-ref-name = 'level_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9928c456c632f88d19cce26b8165bd6f';
        sec-mem-ref-line = '394';
        sec-mem-ref-name = 'sql::get_level_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a03a8753b5312938d83c67b0873014f6e';
        sec-mem-ref-line = '78';
        sec-mem-ref-name = 'level_buttons';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'x';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aefcb8b0819a53d39936400d5c4f4952e';
        sec-mem-ref-line = '182';
        sec-mem-ref-name = 'button_pressed';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1acb425c1934ea523a6850a160610385d5';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'active_level';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a36fa2dbff8ca9dfddb8ff3b6b331e275';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'background_values_map';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a5eb7fea00a56fe6ba33f602871798bc8';
        sec-mem-ref-line = '452';
        sec-mem-ref-name = 'sql::get_level_background_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ace9678fd4d5cdce53584dcc55d4e7c7b';
        sec-mem-ref-line = '164';
        sec-mem-ref-name = 'get_items_from_database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aec34dfe3c55f923f1a04b63040f70050';
        sec-mem-ref-line = '82';
        sec-mem-ref-name = 'object_values_map';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1dd21fbf729e949d804ba5509af2b295';
        sec-mem-ref-line = '401';
        sec-mem-ref-name = 'sql::get_level_object_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a45f7bffb16d54852e0e24902d23f3a91';
        sec-mem-ref-line = '91';
        sec-mem-ref-name = 'pressed_esc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aa6730359d22f4ea8f82347e29af75afa';
        sec-mem-ref-line = '339';
        sec-mem-ref-name = 'view2';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac87f89b0889c243ab43cfbbc7fd70836';
        sec-mem-ref-line = '331';
        sec-mem-ref-name = 'draw_tile_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1aa5cd17c0004af09a706230a93abb10ee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_actions';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '380';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Loop through the actions in the action class.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a17bf53d8483496da9967d5344293db54';
        sec-mem-ref-line = '94';
        sec-mem-ref-name = 'actions';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1ae819c7275982ef9e2891017985560c6d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_rectangle_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '390';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draw the rectangle store on the screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Example:
</h2>
draw_rectangle_store() \n
rectangle_store is now drawn on the screen. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a07af571a23c704edfe87baef71265597';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'rectangle_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1aac9bb03014c071fdf932f6cfa3f34f55';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'rectangle::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1afa6c25fa02db7ad3d904d6bb91b79643';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_background_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '400';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draw the background store.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Example:
</h2>
draw_background_store() \n
background_store is now drawn on the screen. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1adb28cbc235cb4af8b3c4ce8d725a0672';
        sec-mem-ref-line = '75';
        sec-mem-ref-name = 'background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1ac87f89b0889c243ab43cfbbc7fd70836';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_tile_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '410';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draw the tile store.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Example:
</h2>
draw_tile_store() \n
Draw the objects from the tile_store. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a0af5e07c57e50b3ad3d15d7ae64190ce';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'tile_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a3478cade84f5ff58c06df2c173c9127d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_temporary_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '420';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Draw the temporary store.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Example:
</h2>
draw_temporary_store() \n
Draw the objects from the temporary_store. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aebecc1e7c65f9bfd0da843b138fd9e68';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'temporary_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a8a6367bede4a3a13c41f764f1ac628a4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view1';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '338';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a89e3b4fb65aa6db692a2f4db65e6dba2';
        sec-mem-ref-line = '211';
        sec-mem-ref-name = 'remove_object_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac6bf4571731b8283feb4c20d1391fa8b';
        sec-mem-ref-line = '275';
        sec-mem-ref-name = 'get_position_from_rectangle_under_mouse';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1aa6730359d22f4ea8f82347e29af75afa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view2';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '339';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a6579d63ca18e84f7a335bf8072f798cc';
        sec-mem-ref-line = '302';
        sec-mem-ref-name = 'set_selected';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a2051eecaa725f921ef9520030c713a0b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view3';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '340';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a73061ee47d22e443922a460cb97d2ed3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view4';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '341';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1aefcb8b0819a53d39936400d5c4f4952e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'button_pressed';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
dialogbox &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'object';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '130';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if a button is pressed at the given view.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
object : dialogbox& \n
-> A dialog object.

view : view& \n
-> A view.

<h2>Return:
</h2>
bool : bool \n
-> returns true if left mouse button is pressed on the given dialogbox.

<h2>Example:
</h2>
Get_data(dialogbox, view1) \n
return: {true}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1ace9678fd4d5cdce53584dcc55d4e7c7b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_items_from_database';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string >> &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_values_map';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get data from the database by giving a map.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
map vector : std::map<std::string, std::vector<std::string>>& \n
-> a map vector which contains a string with all the database values. 

<h2>Return:
</h2>
vector : std::vector<object> \n
-> returns a vector with all the objects from the database.

<h2>Example:
</h2>
get_items_from_database(object_map) \n
-> item_map is now filled with objects.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1adb28cbc235cb4af8b3c4ce8d725a0672';
        sec-mem-ref-line = '75';
        sec-mem-ref-name = 'background_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a675038d66c5ea045d4e3b922e28a23ec';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_rectangles';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '157';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This function loads all background rectangles in the background vector.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will fill the rectangle_store with rectangles.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'x';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1ace10ab3736e90b40682ab9733b46d8f0';
        sec-mem-ref-line = '72';
        sec-mem-ref-name = 'levelsize';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a520e15cb7a61acba59ccd36a951479e5';
        sec-mem-ref-line = '73';
        sec-mem-ref-name = 'rect_size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1aa4f0d3eebc3c443f9be81bf48561a217';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'y';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a07af571a23c704edfe87baef71265597';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'rectangle_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1ad34dad62ef7c5ea26250b97e9803776a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_tile_list';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This method loads all tiles which can be choosen at the right side of the level editor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will fill the tile_store with objects.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1ace10ab3736e90b40682ab9733b46d8f0';
        sec-mem-ref-line = '72';
        sec-mem-ref-name = 'levelsize';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1b1594767de698a60f38e91690a55a36';
        sec-mem-ref-line = '86';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a0ea1aa772cb693be29da61c6cadffd86';
        sec-mem-ref-line = '226';
        sec-mem-ref-name = 'sql::get_object_sprite_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a2466fe5b0ec24e98190ee5763a4a69d1';
        sec-mem-ref-line = '239';
        sec-mem-ref-name = 'sql::get_object_sprite_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a0af5e07c57e50b3ad3d15d7ae64190ce';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'tile_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a6579d63ca18e84f7a335bf8072f798cc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_selected';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '171';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set a object from the tile list as selected when there is clicked on it.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method is used in the code to be able to switch between objects.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a0af5e07c57e50b3ad3d15d7ae64190ce';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'tile_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
        sec-mem-ref-line = '271';
        sec-mem-ref-name = 'convert_to_coords';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aa6730359d22f4ea8f82347e29af75afa';
        sec-mem-ref-line = '339';
        sec-mem-ref-name = 'view2';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1aa2b54b93aa87f704d841f6ccd59b4e38';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'remove_last_object';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Removes the last object from the temporary store.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function removes the last object from the temporary store.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aebecc1e7c65f9bfd0da843b138fd9e68';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'temporary_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a89e3b4fb65aa6db692a2f4db65e6dba2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'remove_object_under_mouse';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '194';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This function removes the object under the mouse by pressing c.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Return:
</h2>
bool : bool \n
-> returns a bool.


<h2>Example:
</h2>
remove_object_under_mouse()
-> true
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aebecc1e7c65f9bfd0da843b138fd9e68';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'temporary_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
        sec-mem-ref-line = '271';
        sec-mem-ref-name = 'convert_to_coords';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a8a6367bede4a3a13c41f764f1ac628a4';
        sec-mem-ref-line = '338';
        sec-mem-ref-name = 'view1';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a3d09ece44892be49f42c62b3cdcada0c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'create_object';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '210';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Creates an object which is selected at the given position.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
position : sf::Vector2f
-> position for object


<h2>Example:
</h2>
Create_object({100,50})
Creates a selected object at position {100,50}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a0af5e07c57e50b3ad3d15d7ae64190ce';
        sec-mem-ref-line = '76';
        sec-mem-ref-name = 'tile_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aebecc1e7c65f9bfd0da843b138fd9e68';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'temporary_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convert_to_coords';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts a mouse position to map coords on the given view.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
view : sf::View& \n
-> view of the editor


<h2>Return:
</h2>
vector : sf::Vector2f \n
-> A vector converted to mapcoords.


<h2>Example:
</h2>
convert_to_coords(view1);
-> (256,596)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a89e3b4fb65aa6db692a2f4db65e6dba2';
        sec-mem-ref-line = '211';
        sec-mem-ref-name = 'remove_object_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac6bf4571731b8283feb4c20d1391fa8b';
        sec-mem-ref-line = '275';
        sec-mem-ref-name = 'get_position_from_rectangle_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1af11cad8cf1e7999a04f6a8f2a4950794';
        sec-mem-ref-line = '284';
        sec-mem-ref-name = 'is_object_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a6579d63ca18e84f7a335bf8072f798cc';
        sec-mem-ref-line = '302';
        sec-mem-ref-name = 'set_selected';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1ac6bf4571731b8283feb4c20d1391fa8b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_position_from_rectangle_under_mouse';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '247';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the position of the rectangle from rectangle store under the mouse.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Return:
</h2>
position : sf::Vector2f \n
-> A vector2f position.

<h2>Example:
</h2>
get_position_from_rectangle_under_mouse() \n
-> (234,262)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a07af571a23c704edfe87baef71265597';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'rectangle_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1a827e05afcb275c3e6fe29fc80337d8cc';
        sec-mem-ref-line = '61';
        sec-mem-ref-name = 'rectangle::getBounds';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
        sec-mem-ref-line = '271';
        sec-mem-ref-name = 'convert_to_coords';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a8a6367bede4a3a13c41f764f1ac628a4';
        sec-mem-ref-line = '338';
        sec-mem-ref-name = 'view1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a2196c51490b69027860fdb015913de19';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'figure::position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1a0c983ad2887a677d22fbea4eed0ec7d4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_object_under_mouse';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< picture *> &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'vector';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '270';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if a picture object is under the mouse.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
vector : std::vector<picture*>& \n
-> Give a picture vector with the function.

view : sf::View \n
-> Give a view with the function.

<h2>Return:
</h2>
picture_under_mouse : bool \n
-> Returns true if the mouse is on a object. \n

<h2>Example:
</h2>
is_object_under_mouse(picture_vector, view1) \n
-> true
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
        sec-mem-ref-line = '271';
        sec-mem-ref-name = 'convert_to_coords';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1af11cad8cf1e7999a04f6a8f2a4950794';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_object_under_mouse';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< figure *> &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'vector';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '295';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if a figure object is under the mouse.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
vector : std::vector<picture*>& \n
-> Give a figure vector with the function. \n

view : sf::View \n
-> Give a view with the function. \n


<h2>Return:
</h2>
figure_under_mouse : bool \n
-> Returns true if the mouse is on a object. \n


<h2>Example:
</h2>
is_object_under_mouse(figure_vector, view2) \n
-> true \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
        sec-mem-ref-line = '271';
        sec-mem-ref-name = 'convert_to_coords';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1aaa46d78a5b4630364b7b8f115b23dcff';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_button_pressed';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
picture &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'object';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '318';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if a button is pressed at the given view.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Parameters:
</h2>
object : 'picture& \n
-> A picture object. \n

view : view& \n
-> A view. \n

<h2>Return:
</h2>
button_pressed : bool \n
-> returns true if left mouse button is pressed on the given picture. \n

<h2>Example:
</h2>
Get_data(picture, view1) \n
-> true \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classleveleditor_1aa44f48b9869b3d5e0ce0429c6916e2b9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'menu_options';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '334';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Looks if a menu button is pressed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
<h2>Return:
</h2>
back_to_menu_button_pressed : bool \n
-> returns true if the back to menu button is pressed.  \n
sets other variables in the hpp on true or false if a button is pressed. \n

<h2>Example:
</h2>
menu_options() \n
-> true \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a95edfc93a38089da61375eef9e65606e';
        sec-mem-ref-line = '85';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a2051eecaa725f921ef9520030c713a0b';
        sec-mem-ref-line = '340';
        sec-mem-ref-name = 'view3';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1ac05afa3b3ddd67cc6be6df6a43f1526f';
        sec-mem-ref-line = '88';
        sec-mem-ref-name = 'save_level_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a8ba58913d3035bc9ae363e1ce72279d3';
        sec-mem-ref-line = '87';
        sec-mem-ref-name = 'back_to_menu_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aa227a29f049d0b381c05b0e08ea12775';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'new_game_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1adc1e2055b7a34c0719af86f0778b8954';
        sec-mem-ref-line = '90';
        sec-mem-ref-name = 'load_game_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aaa46d78a5b4630364b7b8f115b23dcff';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'is_button_pressed';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a02e37e18772af606dce2ee96d59dc7ae';
        sec-mem-ref-line = '80';
        sec-mem-ref-name = 'level_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a1b1594767de698a60f38e91690a55a36';
        sec-mem-ref-line = '86';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9928c456c632f88d19cce26b8165bd6f';
        sec-mem-ref-line = '394';
        sec-mem-ref-name = 'sql::get_level_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1acb425c1934ea523a6850a160610385d5';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'active_level';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1adb28cbc235cb4af8b3c4ce8d725a0672';
        sec-mem-ref-line = '75';
        sec-mem-ref-name = 'background_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1aebecc1e7c65f9bfd0da843b138fd9e68';
        sec-mem-ref-line = '77';
        sec-mem-ref-name = 'temporary_store';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac24a3682f7478f78508e3e433b637407';
        sec-mem-ref-line = '279';
        sec-mem-ref-name = 'sql::set_new_map';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a45f7bffb16d54852e0e24902d23f3a91';
        sec-mem-ref-line = '91';
        sec-mem-ref-name = 'pressed_esc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'leveleditor_8hpp_1a31762448e212fa345f3a3b6d5ce81d66';
        sec-mem-ref-line = '92';
        sec-mem-ref-name = 'pressed_load_game';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a4c6195e2934d72569b45041039a2be63';
        sec-mem-ref-line = '293';
        sec-mem-ref-name = 'sql::save_tiles';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1ace10ab3736e90b40682ab9733b46d8f0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'levelsize';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= { 0,0 }
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a675038d66c5ea045d4e3b922e28a23ec';
        sec-mem-ref-line = '186';
        sec-mem-ref-name = 'load_rectangles';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ad34dad62ef7c5ea26250b97e9803776a';
        sec-mem-ref-line = '223';
        sec-mem-ref-name = 'load_tile_list';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a520e15cb7a61acba59ccd36a951479e5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rect_size';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= { 0,0 }
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a675038d66c5ea045d4e3b922e28a23ec';
        sec-mem-ref-line = '186';
        sec-mem-ref-name = 'load_rectangles';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a07af571a23c704edfe87baef71265597';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< figure * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rectangle_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a675038d66c5ea045d4e3b922e28a23ec';
        sec-mem-ref-line = '186';
        sec-mem-ref-name = 'load_rectangles';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac6bf4571731b8283feb4c20d1391fa8b';
        sec-mem-ref-line = '275';
        sec-mem-ref-name = 'get_position_from_rectangle_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ae819c7275982ef9e2891017985560c6d';
        sec-mem-ref-line = '313';
        sec-mem-ref-name = 'draw_rectangle_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1adb28cbc235cb4af8b3c4ce8d725a0672';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< picture * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'background_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ace9678fd4d5cdce53584dcc55d4e7c7b';
        sec-mem-ref-line = '164';
        sec-mem-ref-name = 'get_items_from_database';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1afa6c25fa02db7ad3d904d6bb91b79643';
        sec-mem-ref-line = '319';
        sec-mem-ref-name = 'draw_background_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a0af5e07c57e50b3ad3d15d7ae64190ce';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< picture * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tile_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a3d09ece44892be49f42c62b3cdcada0c';
        sec-mem-ref-line = '195';
        sec-mem-ref-name = 'create_object';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ad34dad62ef7c5ea26250b97e9803776a';
        sec-mem-ref-line = '223';
        sec-mem-ref-name = 'load_tile_list';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a6579d63ca18e84f7a335bf8072f798cc';
        sec-mem-ref-line = '302';
        sec-mem-ref-name = 'set_selected';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac87f89b0889c243ab43cfbbc7fd70836';
        sec-mem-ref-line = '331';
        sec-mem-ref-name = 'draw_tile_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1aebecc1e7c65f9bfd0da843b138fd9e68';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< picture * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'temporary_store';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a3d09ece44892be49f42c62b3cdcada0c';
        sec-mem-ref-line = '195';
        sec-mem-ref-name = 'create_object';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa2b54b93aa87f704d841f6ccd59b4e38';
        sec-mem-ref-line = '204';
        sec-mem-ref-name = 'remove_last_object';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a89e3b4fb65aa6db692a2f4db65e6dba2';
        sec-mem-ref-line = '211';
        sec-mem-ref-name = 'remove_object_under_mouse';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a3478cade84f5ff58c06df2c173c9127d';
        sec-mem-ref-line = '325';
        sec-mem-ref-name = 'draw_temporary_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a03a8753b5312938d83c67b0873014f6e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< dialogbox * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'level_buttons';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '78';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a02e37e18772af606dce2ee96d59dc7ae';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'level_ids';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '80';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a36fa2dbff8ca9dfddb8ff3b6b331e275';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'background_values_map';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1aec34dfe3c55f923f1a04b63040f70050';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'object_values_map';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1acb425c1934ea523a6850a160610385d5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'active_level';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a95edfc93a38089da61375eef9e65606e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'window';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aaa46d78a5b4630364b7b8f115b23dcff';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'is_button_pressed';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aefcb8b0819a53d39936400d5c4f4952e';
        sec-mem-ref-line = '182';
        sec-mem-ref-name = 'button_pressed';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac2de1ac26fa5f7e10ca834e6448b1b6b';
        sec-mem-ref-line = '271';
        sec-mem-ref-name = 'convert_to_coords';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ae819c7275982ef9e2891017985560c6d';
        sec-mem-ref-line = '313';
        sec-mem-ref-name = 'draw_rectangle_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1afa6c25fa02db7ad3d904d6bb91b79643';
        sec-mem-ref-line = '319';
        sec-mem-ref-name = 'draw_background_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a3478cade84f5ff58c06df2c173c9127d';
        sec-mem-ref-line = '325';
        sec-mem-ref-name = 'draw_temporary_store';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac87f89b0889c243ab43cfbbc7fd70836';
        sec-mem-ref-line = '331';
        sec-mem-ref-name = 'draw_tile_store';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a1b1594767de698a60f38e91690a55a36';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ad34dad62ef7c5ea26250b97e9803776a';
        sec-mem-ref-line = '223';
        sec-mem-ref-name = 'load_tile_list';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a8ba58913d3035bc9ae363e1ce72279d3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'back_to_menu_button';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1ac05afa3b3ddd67cc6be6df6a43f1526f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'save_level_button';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1aa227a29f049d0b381c05b0e08ea12775';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'new_game_button';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1adc1e2055b7a34c0719af86f0778b8954';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_game_button';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '90';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a5dfc809a9bac07ffa88ce921c077f017';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'leveleditor';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a45f7bffb16d54852e0e24902d23f3a91';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pressed_esc';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= true
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a31762448e212fa345f3a3b6d5ce81d66';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'pressed_load_game';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= false
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'menu_options';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classleveleditor_1a17bf53d8483496da9967d5344293db54';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
action
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'actions';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
		action(sf::Keyboard::Left,  [&]() {view1.move(-16, 0); }),
		action(sf::Keyboard::Right, [&]() {view1.move(16, 0); }),
		action(sf::Keyboard::Up,    [&]() {view1.move(0, -32); }),
		action(sf::Keyboard::Down,  [&]() {view1.move(0, 32); }),
		action(sf::Keyboard::Z,     [&]() {view1.zoom(0.9f); }),
		action(sf::Keyboard::X,		[&]() {view1.zoom(1.1f); }),
		action(sf::Mouse::Left,     [&]() {if (is_object_under_mouse(rectangle_store, view1)) { create_object(get_position_from_rectangle_under_mouse()); } }),
		action(sf::Mouse::Left,		[&]() {if (is_object_under_mouse(tile_store, view2)) { set_selected(); } }),
		action(sf::Keyboard::S,		[&]() {view2.move(0,5); }),
		action(sf::Keyboard::W,		[&]() {view2.move(0,-5); }),
		action(sf::Keyboard::C,     [&]() {remove_object_under_mouse(); }),
		action(sf::Keyboard::BackSpace, [&]() {remove_last_object(); })
	}
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa5cd17c0004af09a706230a93abb10ee';
        sec-mem-ref-line = '337';
        sec-mem-ref-name = 'get_actions';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
  cp-fileline  = '70';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 141;
        node-label = 'leveleditor';
        node-link = {
          node-link-id = 'classleveleditor';
        };
        node-child = {
          child-id = '142';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-actions
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '143';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '144';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-save_level_button
-load_game_button
-back_to_menu_button
-new_game_button
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 143;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 144;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '145';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 142;
        node-label = 'action';
        node-link = {
          node-link-id = 'classaction';
        };
      }; /* node */
      node = {
        node-id    = 145;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classmain__menu';
  cp-name   = 'main_menu';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1a4b0f9ffe66384d5e424a2d353371d84b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'main_menu';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '37';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will crate an object of class main_menu.\n


<h2>Parameters:
</h2>
window : sf::RenderWindow& \n
-> refference to the SFML window.\n


<h2>Example:
</h2>
main_menu m(window)\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a33ab93a1dbb2117179aa7f92e7c75b57';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'level_editor_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1ac1da4a5a730e90c687bbe6cf368308ad';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'play_game_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a614132486d879a486991e992ed6ba9a5';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'load_screen_pic';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a5c77a4d3087e15c767029c9d55d7f4e6';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'gid_gud';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a673d7133b0bbaf357bd1578830545352';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'view1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1a98bd5bdea80247573c1b155a5df5bea2';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'picture::rotate';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1ac653f7645e7dab1807f141ba2395dc5c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'show_menu';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Show menu.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method shows the menu.\n

<h2>Example:
</h2>
show_menu() \n
-> You can now see the menu
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3c11885ae695ba18f0b1c48cd4012c5';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a673d7133b0bbaf357bd1578830545352';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'view1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8cpp_1a2f5aeef38a566a25311f77bc24b8c8b5';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'draw_main_menu';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8cpp_1a9314da13b6b8a7cd40dee3d45f029835';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'button_pressed';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a33ab93a1dbb2117179aa7f92e7c75b57';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'level_editor_button';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'load_screen';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1a9314da13b6b8a7cd40dee3d45f029835';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'button_pressed';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
picture &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'object';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::View &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'view';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ceck if a button is pressed.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method return a boolean if a menu button is pressed with the mouse or not.\n


<h2>Parameters:
</h2>
object : picture& \n
-> refference to picture class object "object".\n

view : sf::View& \n
-> view where the mouse click is checked on.\n


<h2>Return:
</h2>
button pressed : bool
-> button pressed with mouse


<h2>Example:
</h2>
button_pressed(play_game, menu_view)\n
-> true
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3c11885ae695ba18f0b1c48cd4012c5';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'show_menu';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1a924f8d3f2d87b382a8590055cda2f549';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_screen';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Load the load screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will start a small loop, \n
that smoothly change the main_menu to the load screen. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3c11885ae695ba18f0b1c48cd4012c5';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'show_menu';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a673d7133b0bbaf357bd1578830545352';
        sec-mem-ref-line = '14';
        sec-mem-ref-name = 'view1';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a322ab524817b0c59d040962cef7c7295';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'background';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1a4222d8d8a5be3d0775b741049064714f';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'picture::set_transpirantie';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3d65353a385ba3e32800335cafef315';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'view2';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a614132486d879a486991e992ed6ba9a5';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'load_screen_pic';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1a555c4191cafced116939b5c6c354fe3e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gid_gud_splash';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Creater screen.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will start the advertisement screen from the creators of the game. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3d65353a385ba3e32800335cafef315';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'view2';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3c11885ae695ba18f0b1c48cd4012c5';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a5c77a4d3087e15c767029c9d55d7f4e6';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'gid_gud';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1a4222d8d8a5be3d0775b741049064714f';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'picture::set_transpirantie';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1a83e10a5ce65747f1de76e40d32dd8e5b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'loading';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
start the load screen
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will start draw the loadscreen pic. \n
This is so that the player does not only see a black screen while waiting. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3d65353a385ba3e32800335cafef315';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'view2';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3c11885ae695ba18f0b1c48cd4012c5';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a614132486d879a486991e992ed6ba9a5';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'load_screen_pic';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1a4222d8d8a5be3d0775b741049064714f';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'picture::set_transpirantie';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1a673d7133b0bbaf357bd1578830545352';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view1';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '14';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a4b0f9ffe66384d5e424a2d353371d84b';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'show_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'load_screen';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1aa3d65353a385ba3e32800335cafef315';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::View
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'view2';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'load_screen';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a555c4191cafced116939b5c6c354fe3e';
        sec-mem-ref-line = '60';
        sec-mem-ref-name = 'gid_gud_splash';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a83e10a5ce65747f1de76e40d32dd8e5b';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'loading';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1a33ab93a1dbb2117179aa7f92e7c75b57';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'level_editor_button';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a4b0f9ffe66384d5e424a2d353371d84b';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'show_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a2f5aeef38a566a25311f77bc24b8c8b5';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'draw_main_menu';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1ac1da4a5a730e90c687bbe6cf368308ad';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'play_game_button';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a4b0f9ffe66384d5e424a2d353371d84b';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a2f5aeef38a566a25311f77bc24b8c8b5';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'draw_main_menu';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1a614132486d879a486991e992ed6ba9a5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_screen_pic';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a4b0f9ffe66384d5e424a2d353371d84b';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'load_screen';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a83e10a5ce65747f1de76e40d32dd8e5b';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'loading';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1a5c77a4d3087e15c767029c9d55d7f4e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gid_gud';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a4b0f9ffe66384d5e424a2d353371d84b';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a555c4191cafced116939b5c6c354fe3e';
        sec-mem-ref-line = '60';
        sec-mem-ref-name = 'gid_gud_splash';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmain__menu_1a2f5aeef38a566a25311f77bc24b8c8b5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw_main_menu';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a322ab524817b0c59d040962cef7c7295';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'background';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8cpp_1ac69e8047651291091abbe2a8da545aa1';
        sec-mem-ref-line = '79';
        sec-mem-ref-name = 'picture::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1aa3c11885ae695ba18f0b1c48cd4012c5';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1a33ab93a1dbb2117179aa7f92e7c75b57';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'level_editor_button';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'main__menu_8hpp_1ac1da4a5a730e90c687bbe6cf368308ad';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'play_game_button';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'show_menu';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1aa3c11885ae695ba18f0b1c48cd4012c5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'window';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '8';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'show_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a2f5aeef38a566a25311f77bc24b8c8b5';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'draw_main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a9314da13b6b8a7cd40dee3d45f029835';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'button_pressed';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'load_screen';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a555c4191cafced116939b5c6c354fe3e';
        sec-mem-ref-line = '60';
        sec-mem-ref-name = 'gid_gud_splash';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a83e10a5ce65747f1de76e40d32dd8e5b';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'loading';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmain__menu_1a322ab524817b0c59d040962cef7c7295';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
picture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'background';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
      sec-mem-desc-line = '9';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a2f5aeef38a566a25311f77bc24b8c8b5';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'draw_main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'load_screen';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
  cp-fileline  = '6';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 148;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '149';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 147;
        node-label = 'main_menu';
        node-link = {
          node-link-id = 'classmain__menu';
        };
        node-child = {
          child-id = '148';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
+load_screen_pic
-background
+play_game_button
+gid_gud
+level_editor_button
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 149;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classmusic';
  cp-name   = 'music';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmusic_1a08986f41efee0ffe77fcf819dd1bfc2d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'music';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::SoundBuffer
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'buffer';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Sound
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sound';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will crate an object of class music.\n


<h2>Parameters:
</h2>
database : sql& \n
-> refference to the sqlite database.\n

buffer : sf::SoundBuffer \n
-> a sf::SoundBuffer.\n

sound : sf::Sound \n
-> a sf::sound.\n


<h2>Example:
</h2>
music m(database, buffer, sound)\n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmusic_1aeb639e45c64ee79496e8ec6187cfcf70';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_volume';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'i';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set music volume.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function changes the volume of the played music \n

<h2>Parameters:
</h2>
i : int \n
-> The volume strength \n

<h2>Example:
</h2>
set_volume(100) \n
-> Volume has been set to 100 \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'music_8hpp_1a14ba0b22d1e21a9c07b8b24ab50bbb10';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'sound';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1ae7835578f75b785e1ef2a3d0db9420b9';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'play_music_from_map';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmusic_1ae7835578f75b785e1ef2a3d0db9420b9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'play_music_from_map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'map_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '72';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Play map music.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Play the music that belongs to a specific map \n

<h2>Parameters:
</h2>
map_id : std::string \n
-> The map of which the music has to be played \n

<h2>Example:
</h2>
play_music_from_map("1") \n
-> Play the music from map 1 \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'music_8hpp_1a483b70809538add9b52adcaaaddd3c7f';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae959c21f71c8f9b1df8bde932a6c484b';
        sec-mem-ref-line = '591';
        sec-mem-ref-name = 'sql::get_music';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'music_8hpp_1a20de39eece3638a2128136af4ad765e2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'buffer';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'music_8hpp_1a14ba0b22d1e21a9c07b8b24ab50bbb10';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'sound';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'music_8cpp_1aeb639e45c64ee79496e8ec6187cfcf70';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'set_volume';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classmusic_1ae89df284db606b4fb68f9e99702a6872';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'stop_music';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Stop the music.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function stops the music \n

<h2>Example:
</h2>
stop_music() \n
-> Music has been stopped \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'music_8hpp_1a14ba0b22d1e21a9c07b8b24ab50bbb10';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'sound';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmusic_1a20de39eece3638a2128136af4ad765e2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::SoundBuffer
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buffer';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '8';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1ae7835578f75b785e1ef2a3d0db9420b9';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'play_music_from_map';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmusic_1a14ba0b22d1e21a9c07b8b24ab50bbb10';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Sound
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sound';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '9';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1aeb639e45c64ee79496e8ec6187cfcf70';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'set_volume';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1ae7835578f75b785e1ef2a3d0db9420b9';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'play_music_from_map';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1ae89df284db606b4fb68f9e99702a6872';
        sec-mem-ref-line = '35';
        sec-mem-ref-name = 'stop_music';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmusic_1a08beb3c6befa97938b98edae5bc6ec39';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Music
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'intro';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmusic_1a483b70809538add9b52adcaaaddd3c7f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1ae7835578f75b785e1ef2a3d0db9420b9';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'play_music_from_map';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classmusic_1a14adc1380bd15d32bd1a7df66910dabf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'path';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
      sec-mem-desc-line = '12';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
  cp-fileline  = '6';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 152;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 151;
        node-label = 'music';
        node-link = {
          node-link-id = 'classmusic';
        };
        node-child = {
          child-id = '152';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classnpc';
  cp-name   = 'npc';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1ac99eae829579a6f49387bd44129ec33a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'npc';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'npc_id';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'is_player';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will crate an object of class npc.\n


<h2>Parameters:
</h2>
window : sf::RenderWindow \n
-> window where content will be drawn on.

database : sql \n
-> referrence to the database class.\n

npc_id : sf::string \n
-> id of the npc that has to be drawn.

is_player : bool \n
-> boolean to select if this npc is the player or not.


<h2>Example:
</h2>
ability a(window, database, "1")\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3815e143f7d384cb9bd0a1ab45c729a5';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'is_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1ae50304639c2715b89dc1902c59830acf';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'npc_values';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae560c01f2e8e57cee454ecd8e38616eb';
        sec-mem-ref-line = '155';
        sec-mem-ref-name = 'sql::get_player_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1ade5118e0c4c299eea10fda2d8a6611f6';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'texture';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1af04403a0cab4ee13a6f70b396e5b3a20';
        sec-mem-ref-line = '183';
        sec-mem-ref-name = 'sql::get_npc_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a357fc1c053fb6fe0e09c03d72f63191a';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'load_all_actions';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1ae8d1bfcd87382237192ebb5b6def33a5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'move';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delta';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Move the npc.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method moves the position an npc.\n


<h2>Parameters:
</h2>
delta : sf::Vector2f\n
-> new position of the npc.


<h2>Example:
</h2>
move({2,0})\n
npc has moved 2 pixels to the right\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3ca0e4e222e0e7fee4d3abd9a3c7c5c4';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'current_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a0f6538451ec51b4407cca22294451443';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'player::move';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1aa86a880284a09f9fc3358a61a74be1b9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 's';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
"0"
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '110';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
set action of npc
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method sets the current action of the npc.\n
The standard value is walk down.\n


<h2>Parameters:
</h2>
s : std::string\n
-> name of the action that has to be set on active.


<h2>Example:
</h2>
set_action("walk_up")\n
npc is now set for walking up.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3ca0e4e222e0e7fee4d3abd9a3c7c5c4';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'current_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1aa673c84d7b56badc58d7c467325cbf88';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'player::set_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a670b40abcf52e0615883622324ac3bc9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_name';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the name of npc.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the name of an npc.\n


<h2>Return:
</h2>
name : std::String\n
-> name of the ability


<h2>Example:
</h2>
get_name()\n
"monk"\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1ae50304639c2715b89dc1902c59830acf';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'npc_values';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a1adf71c32d8948c9718568d1a2a6d9a7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void draw() : Print NPC
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method draws the NPC on the screen. \n

<h2>Example:
</h2>
draw()\n
-> Draw the NPC on the screen
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3ca0e4e222e0e7fee4d3abd9a3c7c5c4';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'current_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a7fde3d3012e4dff0d02bf882fa466fc6';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a1a369fcd087aa48f9241fb20c8df52f3';
        sec-mem-ref-line = '5';
        sec-mem-ref-name = 'player::player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a67423ce10d4abb42775868f978d04247';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'player::draw';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1aa6a71f7355403e4a108f3c4e8b6a3931';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::IntRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_bounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get a bounds from a NPC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns a sf::IntRect object which is created from the position and size of the NPC object.\n

<h2>Return:
</h2>
intrect_object : sf::IntRect \n
-> a sf::IntRect object using the position and size of the NPC object

<h2>Example:
</h2>
get_bounds() \n
return: sf::IntRect(100, 100, 30, 30) .
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a662c915f75653537fcbffcef96087a48';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'sprite_size';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a64342e70f2e8c3afde210ffa77e1e54e';
        sec-mem-ref-line = '122';
        sec-mem-ref-name = 'get_collision';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a2714b410c2e644040f69f1cf50d3bc50';
        sec-mem-ref-line = '139';
        sec-mem-ref-name = 'get_interaction';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a2714b410c2e644040f69f1cf50d3bc50';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_interaction';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
npc &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'other_npc';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '176';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get interaction two NPC's.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call the 'get_interaction' function to check for a collision with another NPC.

<h2>Parameters:
</h2>
other_npc : NPC & \n
-> The NPC that will be check for a collision.

<h2>Return:
</h2>
0 / 1 : integer \n
-> Return a 1 if there's a collision detected, return a 0 if no collision is detected.

<h2>Example:
</h2>
get_interaction(*other_npc) \n
-> return: {"1"}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1aa6a71f7355403e4a108f3c4e8b6a3931';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'get_bounds';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1ad93507550867df5598b86b73de01ec12';
        sec-mem-ref-line = '42';
        sec-mem-ref-name = 'player::get_interaction';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a64342e70f2e8c3afde210ffa77e1e54e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_collision';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::IntRect
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'colliding_object';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get interaction NPC and object.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call the 'get_collision' function to check for a collision with a sf::IntRect object.\n

<h2>Parameters:
</h2>
colliding_object : sf::IntRect \n
-> The sf::IntRect that will be check for a collision.\n

<h2>Return:
</h2>
0 / 1 : integer \n
-> Return a 1 if there's a collision detected, return a 0 if no collision is detected.\n

<h2>Example:
</h2>
npc.get_collision(recangle) \n
return: {"1"}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1aa6a71f7355403e4a108f3c4e8b6a3931';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'get_bounds';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1aa405bc495c5a6bced7740352abd4249f';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'player::get_collision';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a52d22585e441af4d8dde1d1a2658b2dc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_position';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'given_position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '217';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get position of NPC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
When this function is called, it will return the position of the NPC.\n

<h2>Return:
</h2>
position : sf::Vector2f \n
-> The position of the NPC

<h2>Example:
</h2>
get_position() \n
-> return sf::Vector(200,200)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3815e143f7d384cb9bd0a1ab45c729a5';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'is_player';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3ca0e4e222e0e7fee4d3abd9a3c7c5c4';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'current_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a3bf8cc80800146684a3dbf28c0c4a83c';
        sec-mem-ref-line = '32';
        sec-mem-ref-name = 'player::set_last_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a519784459639f6b785bcfeaa05b6f604';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'player::respawn';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a17ee5122ab15251afb54b4cdd42060e6';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'player::set_position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1af58658444d25eaa77aec883dd9d5592d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '232';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get position of NPC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
When this function is called, it will return the position of the NPC.

<h2>Return:
</h2>
position : sf::Vector2f \n
-> The position of the NPC

<h2>Example:
</h2>
get_position() \n
-> return sf::Vector(200,200)  
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a78bc2f0af05b44a6a8e71fa3853c0920';
        sec-mem-ref-line = '173';
        sec-mem-ref-name = 'get_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a61315bb51941237b6b2c0fb578f3e5ee';
        sec-mem-ref-line = '169';
        sec-mem-ref-name = 'get_current_action';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a2a5bbed340b918265dabc2dcfb5d07b6';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'show_ability';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a77e7e3430ee5ff383f7a16b4b3e07fa1';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = '~npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a78d420774623e89cd896d3cb1d265b17';
        sec-mem-ref-line = '51';
        sec-mem-ref-name = 'player::get_position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a78bc2f0af05b44a6a8e71fa3853c0920';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::Sprite >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action_to_get';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '257';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get NPC action.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function return a list of sprites that is asked from the NPC. \n


<h2>Parameters:
</h2>
action_to_perform : std::string \n
-> The action that has to be shown.


<h2>Return:
</h2>
temp : std::vector<sf::Sprite> \n
-> list of sprites containing the sprites of an ability.


<h2>Example:
</h2>
get_action("walk_up") \n
-> {sprite1,sprite2,....}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8hpp_1af58658444d25eaa77aec883dd9d5592d';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'get_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a676129193d589a975d7a86429a37b1b7';
        sec-mem-ref-line = '59';
        sec-mem-ref-name = 'player::get_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a61315bb51941237b6b2c0fb578f3e5ee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_current_action';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '277';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get current action of NPC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the name of the current action of a NPC. \n
This is the action that the NPC is currently performing in the game.\n


<h2>Return:
</h2>
current_action : std::string \n
-> Name of the current action from NPC.


<h2>Example:
</h2>
get_current_action() \n
-> "walk_up"
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a3ca0e4e222e0e7fee4d3abd9a3c7c5c4';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'current_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8hpp_1af58658444d25eaa77aec883dd9d5592d';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'get_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1afc7732284851b7f0d90b66a5d25931e2';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'player::get_current_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a2a5bbed340b918265dabc2dcfb5d07b6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'show_ability';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action_to_show';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '297';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Perform an action.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function shows one step of the asked ability. \n
This function has to be called in a loop that stops at the max size of the ability list. \n


<h2>Parameters:
</h2>
action_to_show : std::string \n
-> Name of action.


<h2>Example:
</h2>
show_ability("shoot_arrow_up") \n
-> NPC will shoot an arrow northwards.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a7fde3d3012e4dff0d02bf882fa466fc6';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'window';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8hpp_1af58658444d25eaa77aec883dd9d5592d';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'get_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a4659a0677d5b19b0ae27737dfaa0176e';
        sec-mem-ref-line = '68';
        sec-mem-ref-name = 'player::show_ability';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a77e7e3430ee5ff383f7a16b4b3e07fa1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~npc';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '304';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Decontructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Will be called when the object is deleted. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8hpp_1af58658444d25eaa77aec883dd9d5592d';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'get_position';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a357fc1c053fb6fe0e09c03d72f63191a';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_all_actions';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '29';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Load all abilities.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will load all abilities of an NPC sprite sheet.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a3f32867195150317774af508034f0a41';
        sec-mem-ref-line = '65';
        sec-mem-ref-name = 'load_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classnpc_1a3f32867195150317774af508034f0a41';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'load_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'steps_of_action';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'level';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Load a npc ability.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will load one ability of an NPC sprite sheet.\n
This ability has a certain ammount of steps and stands on a certain level in the sprite sheet.\n

<h2>Parameters:
</h2>
action_name : std::string\n
-> name of the ability to load

steps_of_action : int \n
-> ammount of steps of the ability. \n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1ade5118e0c4c299eea10fda2d8a6611f6';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'texture';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'x';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1a662c915f75653537fcbffcef96087a48';
        sec-mem-ref-line = '17';
        sec-mem-ref-name = 'sprite_size';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1afc25127e7611064526758d66e78e4e29';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'npc_actions';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af27f0e211e77578a73b34c7ea094d82b';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a357fc1c053fb6fe0e09c03d72f63191a';
        sec-mem-ref-line = '26';
        sec-mem-ref-name = 'load_all_actions';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1afc25127e7611064526758d66e78e4e29';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< ability * >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'npc_actions';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ae8d1bfcd87382237192ebb5b6def33a5';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a3f32867195150317774af508034f0a41';
        sec-mem-ref-line = '65';
        sec-mem-ref-name = 'load_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1aa86a880284a09f9fc3358a61a74be1b9';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'set_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a2a5bbed340b918265dabc2dcfb5d07b6';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'show_ability';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a1adf71c32d8948c9718568d1a2a6d9a7';
        sec-mem-ref-line = '102';
        sec-mem-ref-name = 'draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'set_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a78bc2f0af05b44a6a8e71fa3853c0920';
        sec-mem-ref-line = '173';
        sec-mem-ref-name = 'get_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1ae50304639c2715b89dc1902c59830acf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'npc_values';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a670b40abcf52e0615883622324ac3bc9';
        sec-mem-ref-line = '111';
        sec-mem-ref-name = 'get_name';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1af2544175f28e31abaa3587d7807aa60c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'id';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '12';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1af27f0e211e77578a73b34c7ea094d82b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ae8d1bfcd87382237192ebb5b6def33a5';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a3f32867195150317774af508034f0a41';
        sec-mem-ref-line = '65';
        sec-mem-ref-name = 'load_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a2a5bbed340b918265dabc2dcfb5d07b6';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'show_ability';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1aa6a71f7355403e4a108f3c4e8b6a3931';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'get_bounds';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'set_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8hpp_1af58658444d25eaa77aec883dd9d5592d';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'get_position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1a092e6acb7f951c0805d6c4c948ccd37d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1a662c915f75653537fcbffcef96087a48';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sprite_size';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 64
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '17';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a3f32867195150317774af508034f0a41';
        sec-mem-ref-line = '65';
        sec-mem-ref-name = 'load_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1aa6a71f7355403e4a108f3c4e8b6a3931';
        sec-mem-ref-line = '117';
        sec-mem-ref-name = 'get_bounds';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1ade5118e0c4c299eea10fda2d8a6611f6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Texture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'texture';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a3f32867195150317774af508034f0a41';
        sec-mem-ref-line = '65';
        sec-mem-ref-name = 'load_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1a7fde3d3012e4dff0d02bf882fa466fc6';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'window';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a2a5bbed340b918265dabc2dcfb5d07b6';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'show_ability';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a1adf71c32d8948c9718568d1a2a6d9a7';
        sec-mem-ref-line = '102';
        sec-mem-ref-name = 'draw';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1a3ca0e4e222e0e7fee4d3abd9a3c7c5c4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'current_action';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "walk_down"
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '20';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ae8d1bfcd87382237192ebb5b6def33a5';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1aa86a880284a09f9fc3358a61a74be1b9';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'set_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a1adf71c32d8948c9718568d1a2a6d9a7';
        sec-mem-ref-line = '102';
        sec-mem-ref-name = 'draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'set_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a61315bb51941237b6b2c0fb578f3e5ee';
        sec-mem-ref-line = '169';
        sec-mem-ref-name = 'get_current_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classnpc_1a3815e143f7d384cb9bd0a1ab45c729a5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'is_player';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= false
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
      sec-mem-desc-line = '22';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'set_position';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
  cp-fileline  = '8';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 155;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 154;
        node-label = 'npc';
        node-link = {
          node-link-id = 'classnpc';
        };
        node-child = {
          child-id = '155';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classpicture';
  cp-name   = 'picture';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classfigure';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classpicture_1af52694740d10d5bad731e3cce8c1dd1a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'picture';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'picture_path';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tile_size';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '26';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a030e9c03d143b019986e9a5346746c11';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'texture';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1abbfcd0b2bcba33144c7e3f34a19f7071';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'sprite';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classpicture_1a3a23c2ae495660c218f6f4e40e7e61cc';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::FloatRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '27';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classpicture_1a98bd5bdea80247573c1b155a5df5bea2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rotate';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'angle';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '30';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1abbfcd0b2bcba33144c7e3f34a19f7071';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'sprite';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a4b0f9ffe66384d5e424a2d353371d84b';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'main_menu::main_menu';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classpicture_1a4222d8d8a5be3d0775b741049064714f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_transpirantie';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '31';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1abbfcd0b2bcba33144c7e3f34a19f7071';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'sprite';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'main_menu::load_screen';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a555c4191cafced116939b5c6c354fe3e';
        sec-mem-ref-line = '60';
        sec-mem-ref-name = 'main_menu::gid_gud_splash';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a83e10a5ce65747f1de76e40d32dd8e5b';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'main_menu::loading';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classpicture_1ac69e8047651291091abbe2a8da545aa1';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '33';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a2196c51490b69027860fdb015913de19';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'figure::position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'dialogbox_8cpp_1a722438dee05d120c77871b1ec9d26cf5';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'dialogbox::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'leveleditor::menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a2f5aeef38a566a25311f77bc24b8c8b5';
        sec-mem-ref-line = '23';
        sec-mem-ref-name = 'main_menu::draw_main_menu';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        sec-mem-ref-line = '33';
        sec-mem-ref-name = 'main_menu::load_screen';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a555c4191cafced116939b5c6c354fe3e';
        sec-mem-ref-line = '60';
        sec-mem-ref-name = 'main_menu::gid_gud_splash';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main__menu_8cpp_1a83e10a5ce65747f1de76e40d32dd8e5b';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'main_menu::loading';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classpicture_1ab294409095c573549bdc79f9e6d31024';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'picture_path';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '28';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classpicture_1adff8f66e606a6c2e9a8f8b76d4ced587';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'tile_size';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '29';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classpicture_1a030e9c03d143b019986e9a5346746c11';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Texture
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'texture';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '23';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1af52694740d10d5bad731e3cce8c1dd1a';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'picture';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classpicture_1abbfcd0b2bcba33144c7e3f34a19f7071';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Sprite
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sprite';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '24';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1af52694740d10d5bad731e3cce8c1dd1a';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'picture';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a98bd5bdea80247573c1b155a5df5bea2';
        sec-mem-ref-line = '20';
        sec-mem-ref-name = 'rotate';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a4222d8d8a5be3d0775b741049064714f';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'set_transpirantie';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
  cp-fileline  = '21';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 156;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '157';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 157;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 158;
        node-label = 'picture';
        node-link = {
          node-link-id = 'classpicture';
        };
        node-child = {
          child-id = '159';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 159;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classplayer';
  cp-name   = 'player';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a1a369fcd087aa48f9241fb20c8df52f3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'player';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sql &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'database';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'save';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '39';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will create an object of class npc.\n


<h2>Parameters:
</h2>
window : sf::RenderWindow \n
-> window where content will be drawn on.

database : sql \n
-> referrence to the database class.\n

save : sf::string \n
-> id of the current game save.


<h2>Example:
</h2>
player a(window, database, "1")\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a1adf71c32d8948c9718568d1a2a6d9a7';
        sec-mem-ref-line = '102';
        sec-mem-ref-name = 'npc::draw';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a3809687b5d650b424726ef2f61c285de';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'spawn';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae560c01f2e8e57cee454ecd8e38616eb';
        sec-mem-ref-line = '155';
        sec-mem-ref-name = 'sql::get_player_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1ab6521a8b56e507945311a7e415933a49';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'player_id';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7e37704e10e2be3e02a155127495727e';
        sec-mem-ref-line = '12';
        sec-mem-ref-name = 'position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a0f6538451ec51b4407cca22294451443';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'move';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delta';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void move() : Move the player
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method moves the position the player.\n


<h2>Parameters:
</h2>
delta : sf::Vector2f\n
-> new position of the player.


<h2>Example:
</h2>
move({2,0})\n
player has moved 2 pixels to the right\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1ae8d1bfcd87382237192ebb5b6def33a5';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'npc::move';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a856eed939c632225be8287f0b56df8d0';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'last_move';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7e37704e10e2be3e02a155127495727e';
        sec-mem-ref-line = '12';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'game::move_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1aa673c84d7b56badc58d7c467325cbf88';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 's';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void set_action(std::string s) : Set action of the player
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method sets the current action of the player.\n
The standard value is walk down.\n


<h2>Parameters:
</h2>
s : std::string\n
-> name of the action that has to be set on active.

<h2>Example:
</h2>
set_action("walk_up")\n
-> Player is now set for walking up.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1aa86a880284a09f9fc3358a61a74be1b9';
        sec-mem-ref-line = '81';
        sec-mem-ref-name = 'npc::set_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'game::move_player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'game::perform_player_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a67423ce10d4abb42775868f978d04247';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void draw() : Print player
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method draws the player on the screen. \n

<h2>Example:
</h2>
draw()\n
-> Draw the player on the screen
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a1adf71c32d8948c9718568d1a2a6d9a7';
        sec-mem-ref-line = '102';
        sec-mem-ref-name = 'npc::draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a4982a1c81b1a52b8f050ef48dea86743';
        sec-mem-ref-line = '323';
        sec-mem-ref-name = 'game::draw_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a519784459639f6b785bcfeaa05b6f604';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'respawn';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void respawn() : Respawn player
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method moves the player back to a specific location \n

<h2>Example:
</h2>
respawn()\n
-> Player will be moved back to (200,200)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7e37704e10e2be3e02a155127495727e';
        sec-mem-ref-line = '12';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a3809687b5d650b424726ef2f61c285de';
        sec-mem-ref-line = '11';
        sec-mem-ref-name = 'spawn';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'npc::set_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'game::game_loop';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1ad93507550867df5598b86b73de01ec12';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_interaction';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
npc &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'other_npc';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int npc::get_interaction(npc & other_npc) : Get interaction between the player and a NPC
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call the 'get_interaction' function to check for a collision between the player and a NPC

<h2>Parameters:
</h2>
other_npc : NPC & \n
-> The NPC that will be checked with for a collision

<h2>Return:
</h2>
0 / 1 : integer \n
-> Return a 1 if there's a collision detected, return a 0 if no collision is detected

<h2>Example:
</h2>
get_interaction(*other_npc) \n
-> return: {"1"}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a2714b410c2e644040f69f1cf50d3bc50';
        sec-mem-ref-line = '139';
        sec-mem-ref-name = 'npc::get_interaction';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'game::interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'game::move_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1aa405bc495c5a6bced7740352abd4249f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_collision';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::IntRect
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'colliding_object';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
int get_collision(sf::IntRect colliding_object) : Get interaction between a NPC and a sf::IntRect object
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call the 'get_collision' function to check for a collision with a sf::IntRect object

<h2>Parameters:
</h2>
colliding_object : sf::IntRect \n
-> The sf::IntRect that will be check for a collision

<h2>Return:
</h2>
0 / 1 : integer \n
-> Return a 1 if there's a collision detected, return a 0 if no collision is detected

<h2>Example:
</h2>
get_collision(recangle) \n
-> return: {"1"}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a64342e70f2e8c3afde210ffa77e1e54e';
        sec-mem-ref-line = '122';
        sec-mem-ref-name = 'npc::get_collision';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'game::move_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a3bf8cc80800146684a3dbf28c0c4a83c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_last_position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '152';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void set_last_position() : Set the position back to its last position
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
When this function is called, the current location will be set to last location

<h2>Example:
</h2>
set_last_position() \n
 -> The position is now set to the last position
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7e37704e10e2be3e02a155127495727e';
        sec-mem-ref-line = '12';
        sec-mem-ref-name = 'position';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a856eed939c632225be8287f0b56df8d0';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'last_move';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'npc::set_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        sec-mem-ref-line = '294';
        sec-mem-ref-name = 'game::move_player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a78d420774623e89cd896d3cb1d265b17';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '169';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
sf::Vector2f get_position() : Get position of player
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
When this function is called, it will return the position of the player

<h2>Return:
</h2>
position : sf::Vector2f \n
-> The position of the player


<h2>Example:
</h2>
get_position() \n
-> return sf::Vector(200,200)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8hpp_1af58658444d25eaa77aec883dd9d5592d';
        sec-mem-ref-line = '232';
        sec-mem-ref-name = 'npc::get_position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a676129193d589a975d7a86429a37b1b7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< sf::Sprite >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_action';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action_to_get';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '185';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
void show_action(std::string action_to_perform) : Player acion
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function displays the right action of the player, so the right spritepart that displays the current action of the player, like walking up

<h2>Parameters:
</h2>
action_to_perform : std::string \n
-> The action that has to be shown

<h2>Example:
</h2>
show_action("walk_up") \n
-> Now the player seems to be walking up
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a78bc2f0af05b44a6a8e71fa3853c0920';
        sec-mem-ref-line = '173';
        sec-mem-ref-name = 'npc::get_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'game::perform_player_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1afc7732284851b7f0d90b66a5d25931e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_current_action';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '204';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get current action the player.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the name of the current action of the player. \n
This is the action that the player is currently performing in the game.\n


<h2>Return:
</h2>
current_action : std::string \n
-> Name of the current action from the player.


<h2>Example:
</h2>
get_current_action() \n
-> "walk_up"
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a61315bb51941237b6b2c0fb578f3e5ee';
        sec-mem-ref-line = '169';
        sec-mem-ref-name = 'npc::get_current_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        sec-mem-ref-line = '269';
        sec-mem-ref-name = 'game::player_skill';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'game::perform_player_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a4659a0677d5b19b0ae27737dfaa0176e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'show_ability';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'action_to_show';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Perform an action.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function shows one step of the asked ability. \n
This function has to be called in a loop that stops at the max size of the ability list. \n


<h2>Parameters:
</h2>
action_to_show : std::string \n
-> Name of action.


<h2>Example:
</h2>
show_ability("shoot_arrow_up") \n
-> the player will shoot an arrow northwards.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a2a5bbed340b918265dabc2dcfb5d07b6';
        sec-mem-ref-line = '89';
        sec-mem-ref-name = 'npc::show_ability';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a50870549f1abdbc924743d8173ced15d';
        sec-mem-ref-line = '327';
        sec-mem-ref-name = 'game::perform_player_action';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1a17ee5122ab15251afb54b4cdd42060e6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_position';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'new_position';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '241';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get position of the player.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
When this function is called, it will return the position of the player.\n

<h2>Return:
</h2>
position : sf::Vector2f \n
-> The position of the player

<h2>Example:
</h2>
get_position() \n
-> return sf::Vector(200,200)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'player_8hpp_1a7f6192f63ec45be0efbf6903c1f8910e';
        sec-mem-ref-line = '9';
        sec-mem-ref-name = 'player_npc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'npc_8cpp_1a52d22585e441af4d8dde1d1a2658b2dc';
        sec-mem-ref-line = '158';
        sec-mem-ref-name = 'npc::set_position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classplayer_1aab5d2e47b80e0481f09ca0df8b823057';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~player';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '248';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Decontructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Will be called when the object is deleted. \n
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classplayer_1a7f6192f63ec45be0efbf6903c1f8910e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
npc
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'player_npc';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '9';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a1a369fcd087aa48f9241fb20c8df52f3';
        sec-mem-ref-line = '5';
        sec-mem-ref-name = 'player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a0f6538451ec51b4407cca22294451443';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1aa673c84d7b56badc58d7c467325cbf88';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'set_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a67423ce10d4abb42775868f978d04247';
        sec-mem-ref-line = '28';
        sec-mem-ref-name = 'draw';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a3bf8cc80800146684a3dbf28c0c4a83c';
        sec-mem-ref-line = '32';
        sec-mem-ref-name = 'set_last_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a519784459639f6b785bcfeaa05b6f604';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'respawn';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1ad93507550867df5598b86b73de01ec12';
        sec-mem-ref-line = '42';
        sec-mem-ref-name = 'get_interaction';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1aa405bc495c5a6bced7740352abd4249f';
        sec-mem-ref-line = '46';
        sec-mem-ref-name = 'get_collision';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a78d420774623e89cd896d3cb1d265b17';
        sec-mem-ref-line = '51';
        sec-mem-ref-name = 'get_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1afc7732284851b7f0d90b66a5d25931e2';
        sec-mem-ref-line = '55';
        sec-mem-ref-name = 'get_current_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a676129193d589a975d7a86429a37b1b7';
        sec-mem-ref-line = '59';
        sec-mem-ref-name = 'get_action';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a17ee5122ab15251afb54b4cdd42060e6';
        sec-mem-ref-line = '63';
        sec-mem-ref-name = 'set_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a4659a0677d5b19b0ae27737dfaa0176e';
        sec-mem-ref-line = '68';
        sec-mem-ref-name = 'show_ability';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classplayer_1ab6521a8b56e507945311a7e415933a49';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'player_id';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '10';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a1a369fcd087aa48f9241fb20c8df52f3';
        sec-mem-ref-line = '5';
        sec-mem-ref-name = 'player';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classplayer_1a3809687b5d650b424726ef2f61c285de';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'spawn';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '11';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a1a369fcd087aa48f9241fb20c8df52f3';
        sec-mem-ref-line = '5';
        sec-mem-ref-name = 'player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a519784459639f6b785bcfeaa05b6f604';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'respawn';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classplayer_1a7e37704e10e2be3e02a155127495727e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'position';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '12';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a1a369fcd087aa48f9241fb20c8df52f3';
        sec-mem-ref-line = '5';
        sec-mem-ref-name = 'player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a0f6538451ec51b4407cca22294451443';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a3bf8cc80800146684a3dbf28c0c4a83c';
        sec-mem-ref-line = '32';
        sec-mem-ref-name = 'set_last_position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a519784459639f6b785bcfeaa05b6f604';
        sec-mem-ref-line = '37';
        sec-mem-ref-name = 'respawn';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classplayer_1a856eed939c632225be8287f0b56df8d0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'last_move';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '13';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a0f6538451ec51b4407cca22294451443';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'move';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a3bf8cc80800146684a3dbf28c0c4a83c';
        sec-mem-ref-line = '32';
        sec-mem-ref-name = 'set_last_position';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classplayer_1aa5560a5bdfc340ad6def011573ee5eb7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sql
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
      sec-mem-desc-line = '14';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
  cp-fileline  = '7';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 162;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */
      node = {
        node-id    = 163;
        node-label = 'npc';
        node-link = {
          node-link-id = 'classnpc';
        };
        node-child = {
          child-id = '162';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 161;
        node-label = 'player';
        node-link = {
          node-link-id = 'classplayer';
        };
        node-child = {
          child-id = '162';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-database
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
        node-child = {
          child-id = '163';
          relation = usage;
          edgelabel = <<_EnD_oF_dEf_TeXt_
-player_npc
_EnD_oF_dEf_TeXt_;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classrectangle';
  cp-name   = 'rectangle';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classfigure';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classrectangle_1a455f57024598d3c84906766bc083a104';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rectangle';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'position';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'size';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'outline_thickness';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Color
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'color';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Color
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'outline_color';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1ae2c7b7085f2e7778bc97cec8816360aa';
        sec-mem-ref-line = '50';
        sec-mem-ref-name = 'size_in';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1aad94646844fb2682cc972f734889c694';
        sec-mem-ref-line = '51';
        sec-mem-ref-name = 'set_color';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a22e5d579d5cec330a86d838e6c6e5602';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'rect';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classrectangle_1a827e05afcb275c3e6fe29fc80337d8cc';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::FloatRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getBounds';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a22e5d579d5cec330a86d838e6c6e5602';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'rect';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ac6bf4571731b8283feb4c20d1391fa8b';
        sec-mem-ref-line = '275';
        sec-mem-ref-name = 'leveleditor::get_position_from_rectangle_under_mouse';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classrectangle_1aac9bb03014c071fdf932f6cfa3f34f55';
      sec-mem-virt = virtual;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'draw';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'window';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '57';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a22e5d579d5cec330a86d838e6c6e5602';
        sec-mem-ref-line = '52';
        sec-mem-ref-name = 'rect';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'objects_8hpp_1a2196c51490b69027860fdb015913de19';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'figure::position';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ae819c7275982ef9e2891017985560c6d';
        sec-mem-ref-line = '313';
        sec-mem-ref-name = 'leveleditor::draw_rectangle_store';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classrectangle_1ae2c7b7085f2e7778bc97cec8816360aa';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'size_in';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a455f57024598d3c84906766bc083a104';
        sec-mem-ref-line = '41';
        sec-mem-ref-name = 'rectangle';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classrectangle_1aad94646844fb2682cc972f734889c694';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Color
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_color';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a455f57024598d3c84906766bc083a104';
        sec-mem-ref-line = '41';
        sec-mem-ref-name = 'rectangle';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classrectangle_1a22e5d579d5cec330a86d838e6c6e5602';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::RectangleShape
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rect';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a455f57024598d3c84906766bc083a104';
        sec-mem-ref-line = '41';
        sec-mem-ref-name = 'rectangle';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1a827e05afcb275c3e6fe29fc80337d8cc';
        sec-mem-ref-line = '61';
        sec-mem-ref-name = 'getBounds';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'objects_8cpp_1aac9bb03014c071fdf932f6cfa3f34f55';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'draw';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
  cp-fileline  = '48';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 165;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 164;
        node-label = 'rectangle';
        node-link = {
          node-link-id = 'classrectangle';
        };
        node-child = {
          child-id = '165';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 167;
        node-label = 'figure';
        node-link = {
          node-link-id = 'classfigure';
        };
      }; /* node */
      node = {
        node-id    = 166;
        node-label = 'rectangle';
        node-link = {
          node-link-id = 'classrectangle';
        };
        node-child = {
          child-id = '167';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classsql';
  cp-name   = 'sql';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ac9b186df2a51d7eda72cd4a9c34c0624';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sql';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1aa0b79c68df90d2e2a3f829e25a44b878';
        sec-mem-ref-line = '16';
        sec-mem-ref-name = 'database_path';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a9eacc4ecb1f8cb870c2234adba85d31f';
        sec-mem-ref-line = '19';
        sec-mem-ref-name = 'connection';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a16d6812a301ce81d856e7d5800bf20fd';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'database';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a67805540e55f3cfb1849178023aa39b2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = '~sql';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '41';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a16d6812a301ce81d856e7d5800bf20fd';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'database';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a1cb74ab7343ef603490518715297be83';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'table';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'columnname';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get data from a column in a table in the database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method gets the data from a column in a table in the database.\n

<h2>Parameters:
</h2>
table : char* \n
-> Table name in the database

column : char* \n
-> Column name in the database

<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.

<h2>Example:
</h2>
Get_data("player", "level") \n
return: {"1"}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ae854372bac3fc5e681287e3cbf5b03de';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'get_number_of_npcs';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a4c6195e2934d72569b45041039a2be63';
        sec-mem-ref-line = '293';
        sec-mem-ref-name = 'save_tiles';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a29fe43df701460704744049aec28d58e';
        sec-mem-ref-line = '389';
        sec-mem-ref-name = 'get_available_levels';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a9928c456c632f88d19cce26b8165bd6f';
        sec-mem-ref-line = '394';
        sec-mem-ref-name = 'get_level_ids';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a1dd21fbf729e949d804ba5509af2b295';
        sec-mem-ref-line = '401';
        sec-mem-ref-name = 'get_level_object_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a5eb7fea00a56fe6ba33f602871798bc8';
        sec-mem-ref-line = '452';
        sec-mem-ref-name = 'get_level_background_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1af126860a2afcf82e53c9f895577bab76';
        sec-mem-ref-line = '502';
        sec-mem-ref-name = 'get_collision_objects';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1afbf7d36239ee07a23d06c72f2fd1b93c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'table';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'columnname';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'condition1';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'condition2';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get data from a column in a table in the database with condition.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method gets the data from a table in the database,\n
where the value of the given column meets the condition values.

<h2>Parameters:
</h2>
table : char* \n
-> Table name in the database

column : char* \n
-> Column name in the database

condition1 : char* \n
-> First condition of the Where statement in the SQL query.

condition2 : char* \n
-> Second condition of the Where statement in the SQL query.

<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.

<h2>Example:
</h2>
Get_data("player", "name","id","1") \n
return: {"arno"}.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1aa6a8501373e0cd73d48bee389353d6ea';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'change_data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'table';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'condition1';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'condition2';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'columnname';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'new_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Change values in the database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method overwrites data in the database,
where the value of the given column meets the condition values.

<h2>Parameters:
</h2>
table : char* \n
-> Table name in the database

condition1 : char* \n
-> First condition of the Where statement in the SQL query.

condition2 : char* \n
-> Second condition of the Where statement in the SQL query.

columnname : char* \n
-> Column name in the database

new_value : char* \n
-> New value to be set in the specified column value

<h2>Example:
</h2>
change_data("player","id","1","name","pieter")\n
The name of the player is now "pieter" instead of "arno"
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a94c4df2d61461e99d3767f1b37163c2f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'add_data';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'table';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'values';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Add a new value to database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method adds a new value in the given table of the database.\n
The parameter "value" is consists all the column values except the id,\n
because the this value has auto increment.

<h2>Parameters:
</h2>
table : char* \n
-> Table name in the database

values : char* \n
-> column values to add in the database.


<h2>Example:
</h2>
add_data("sprites","'../../bin/objects/new_pic.png', new pic , 64 , 64")\n
There is now a new record in the database with the given values.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ac70e1da6d9e49f114bcf639fd1e6f86c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'execute_query_without_return';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'to_be_executed';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '168';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Execute a query.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method executes a given query that has no return value.\n

<h2>Parameters:
</h2>
to_be_executed : const char* \n
-> Query to be executed


<h2>Example:
</h2>
execute_query_without_return("INSERT INTO sprites VALUES(NULL, '../../bin/objects/new_pic.png', new pic , 64 , 64);")\n
There is now a new record in the database with the given values.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a1ad7137a182503f7676b53f6fa2786ed';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'rc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a16d6812a301ce81d856e7d5800bf20fd';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1aff61710f28dd54827b67a99c24fbdb0d';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'callback';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a2d17635b5b4cf20d48ba354e2330b734';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = '_ERROR_MESSAGE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a4bdab1846b3789ddd83521d5eec019b5';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'check_query_request';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a94c4df2d61461e99d3767f1b37163c2f';
        sec-mem-ref-line = '74';
        sec-mem-ref-name = 'add_data';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1af0e753f3af81ff1ff7f7582dcea4b0ed';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'add_item_to_inventory';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1aa6a8501373e0cd73d48bee389353d6ea';
        sec-mem-ref-line = '93';
        sec-mem-ref-name = 'change_data';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac24a3682f7478f78508e3e433b637407';
        sec-mem-ref-line = '279';
        sec-mem-ref-name = 'set_new_map';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a4c6195e2934d72569b45041039a2be63';
        sec-mem-ref-line = '293';
        sec-mem-ref-name = 'save_tiles';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a53dd323de395c13534e63a3482190777';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'execute_query_with_return';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'to_be_executed';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '192';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Execute a query.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method executes a given query that has a return value.\n

<h2>Parameters:
</h2>
to_be_executed : const char* \n
-> Query to be executed


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
execute_query_with_return("SELECT name FROM player WHERE id == 1;")\n
Return: {"arno"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a1ad7137a182503f7676b53f6fa2786ed';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'rc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a16d6812a301ce81d856e7d5800bf20fd';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'database';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1aff61710f28dd54827b67a99c24fbdb0d';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'callback';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a2d17635b5b4cf20d48ba354e2330b734';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = '_ERROR_MESSAGE';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a4bdab1846b3789ddd83521d5eec019b5';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'check_query_request';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ad4d8bdf41eede1ae1363d0be8a2f60a9';
        sec-mem-ref-line = '103';
        sec-mem-ref-name = 'get_result';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1afbf7d36239ee07a23d06c72f2fd1b93c';
        sec-mem-ref-line = '57';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a7f818b967453b1ae15ce4c5b28cf4765';
        sec-mem-ref-line = '114';
        sec-mem-ref-name = 'get_inventory';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a7b49bcf5ac10f6421a5ecd62865e3316';
        sec-mem-ref-line = '124';
        sec-mem-ref-name = 'get_name_from_id_inventory';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a060764a845c3a26c99c6f15470df9634';
        sec-mem-ref-line = '134';
        sec-mem-ref-name = 'get_sprite_inventory';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a62cd4910a9310621ca22fb3c322f52a4';
        sec-mem-ref-line = '144';
        sec-mem-ref-name = 'get_in_game_name_from_id_inventory';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ae560c01f2e8e57cee454ecd8e38616eb';
        sec-mem-ref-line = '155';
        sec-mem-ref-name = 'get_player_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a370d018617316ff6489cbb97565b7af9';
        sec-mem-ref-line = '166';
        sec-mem-ref-name = 'get_player_sprite';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1af04403a0cab4ee13a6f70b396e5b3a20';
        sec-mem-ref-line = '183';
        sec-mem-ref-name = 'get_npc_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a0ea1aa772cb693be29da61c6cadffd86';
        sec-mem-ref-line = '226';
        sec-mem-ref-name = 'get_object_sprite_ids';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a2466fe5b0ec24e98190ee5763a4a69d1';
        sec-mem-ref-line = '239';
        sec-mem-ref-name = 'get_object_sprite_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a4c6195e2934d72569b45041039a2be63';
        sec-mem-ref-line = '293';
        sec-mem-ref-name = 'save_tiles';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a1dd21fbf729e949d804ba5509af2b295';
        sec-mem-ref-line = '401';
        sec-mem-ref-name = 'get_level_object_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a5eb7fea00a56fe6ba33f602871798bc8';
        sec-mem-ref-line = '452';
        sec-mem-ref-name = 'get_level_background_value';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1af126860a2afcf82e53c9f895577bab76';
        sec-mem-ref-line = '502';
        sec-mem-ref-name = 'get_collision_objects';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ae959c21f71c8f9b1df8bde932a6c484b';
        sec-mem-ref-line = '591';
        sec-mem-ref-name = 'get_music';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a59249e218b1bb9d811c50b5615312eaf';
        sec-mem-ref-line = '607';
        sec-mem-ref-name = 'get_quest_text';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a9f75a32a77a498b1a328a53ade518ce7';
        sec-mem-ref-line = '636';
        sec-mem-ref-name = 'get_quest_parts';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a7b49bcf5ac10f6421a5ecd62865e3316';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_name_from_id_inventory';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '236';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the name from an item.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the name of an item by using its ID.\n


<h2>Parameters:
</h2>
item_id : std::string \n
-> The ID of the item. \n


<h2>Return:
</h2>
name : std::vector<std::string> \n
-> The name of the requested item.


<h2>Example:
</h2>
get_name_from_id_inventory("1") \n
-> tokato_gloves
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1ab7c2fa653e0f9a565283b60ca325f2a7';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'item::get_name';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a060764a845c3a26c99c6f15470df9634';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_sprite_inventory';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '259';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the sprite_path from an item.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the name of an item by using its ID.\n

<h2>Parameters:
</h2>
sprite_path : std::string \n
-> The ID of the item.


<h2>Return:
</h2>
sprite_path : std::vector<std::string> \n
-> The sprite_path of the requested item.


<h2>Example:
</h2>
get_sprite_inventory("1") \n
-> "../../bin/objects/banana.gif"
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1aafc61a4b7e2bd10300a6767e6dd7281e';
        sec-mem-ref-line = '22';
        sec-mem-ref-name = 'item::get_sprite';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a62cd4910a9310621ca22fb3c322f52a4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_in_game_name_from_id_inventory';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '282';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the name from an item.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function returns the name of an item by using its ID.\n

<h2>Parameters:
</h2>
item_id : std::string \n
-> The ID of the item.


<h2>Return:
</h2>
name : std::vector<std::string> \n
-> The in game name of the requested item.


<h2>Example:
</h2>
get_name_from_id_inventory("1") \n
-> Tokato Gloves
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'item_8cpp_1aa5a9140482a7d88d6a3eea342cb0c082';
        sec-mem-ref-line = '15';
        sec-mem-ref-name = 'item::get_in_game_name';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a7f818b967453b1ae15ce4c5b28cf4765';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_inventory';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '300';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the inventory.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function retrieves the inventory and its values and puts it into a vector. \n


<h2>Return:
</h2>
inventory_vector : std::vector<std::string> \n
-> This vector contains the items in the inventory


<h2>Example:
</h2>
get_inventory() \n
-> {"1", "2", "2", "3"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'inventory_8cpp_1abb6d846e4b7297f79c2c9fb34b26fee2';
        sec-mem-ref-line = '8';
        sec-mem-ref-name = 'inventory::get_inventory';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ae560c01f2e8e57cee454ecd8e38616eb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_player_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'save';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'variable_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '353';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get value of a column from the player.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns a column value of the player.\n
The save is equal the the player id in the database,\n
this is because the player can have multiple saved games.\n

<h2>Parameters:
</h2>
save : int \n
-> Save of the player and player id in the database.

variable_name : std::string \n
-> Columnname from what the value is requested.


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_player_value(1,"name")\n
-> {"arno"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc::npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'player_8cpp_1a1a369fcd087aa48f9241fb20c8df52f3';
        sec-mem-ref-line = '5';
        sec-mem-ref-name = 'player::player';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a370d018617316ff6489cbb97565b7af9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_player_sprite';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'save';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '380';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get sprite sheet of the player.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the sprite sheet of the player.\n
The save is equal the the player id in the database,\n
this is because the player can have multiple saved games.\n


<h2>Parameters:
</h2>
save : int \n
-> Save of the player and player id in the database.


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_player_sprite(1)\n
-> {"../../bin/sprite_sheets/player_sprite.png"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a251f53bb3d5d98f821713a42212276e9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_player_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'npc_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '406';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get value of the player.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the value of a player.\n
The player value is calculated on the player_id.\n


<h2>Parameters:
</h2>
npc_id : std::string \n
-> Save of the player and player id in the database.


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_player_sprite(1)\n
-> {"../../bin/sprite_sheets/player_sprite.png"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1af0e753f3af81ff1ff7f7582dcea4b0ed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'add_item_to_inventory';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'item_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '424';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Add an item to the players inventory.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This function will give the player an item that will be stored in the inventory table in the database.\n


<h2>Parameters:
</h2>
item_name : std::string
-> The name of the item that has to be given


<h2>Example:
</h2>
add_item_to_inventory("1");
-> Adds a banana to the users inventory
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1aa78cf955c292ac2bd75fa385a946cd6e';
        sec-mem-ref-line = '210';
        sec-mem-ref-name = 'game::interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1af04403a0cab4ee13a6f70b396e5b3a20';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_npc_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'npc_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '465';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all values from columns in NPC.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns all column values of a NPC.\n

The order of the returning values in the vector is:\n

index   |   name of value \n
----------------------&mdash; \n
    0   |       name \n
    1   |       level \n
    2   |       class_id \n
    3   |       sprite_id \n
    4   |       position_x \n
    5   |       position_y \n
    6   |       quest_id \n


<h2>Parameters:
</h2>
npc_id : std::string \n
-> ID of the NPC from whom the values are asked.


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_npc_value("1")\n
-> {"arno"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'npc_8cpp_1ac99eae829579a6f49387bd44129ec33a';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'npc::npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ae854372bac3fc5e681287e3cbf5b03de';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_number_of_npcs';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '485';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all id's of the NPC's.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns all id values of the NPC table.\n
The lengths of the vector is equal to how many NPC's there are in the table.\n


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_number_of_npcs()\n
-> {"1","2","5"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a3718980f99cd44e9c882c2aa67368450';
        sec-mem-ref-line = '263';
        sec-mem-ref-name = 'game::load_npc';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a0ea1aa772cb693be29da61c6cadffd86';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_object_sprite_ids';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '507';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get id's from objects and tiles sprites.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns all sprite id values of tiles and objects.\n


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_object_sprite_ids()\n
-> {"1","2","5"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ad34dad62ef7c5ea26250b97e9803776a';
        sec-mem-ref-line = '223';
        sec-mem-ref-name = 'leveleditor::load_tile_list';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a2466fe5b0ec24e98190ee5763a4a69d1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_object_sprite_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'object_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '540';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all values from columns in sprites.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns all column values of a a sprite.\n
The order of the returning values in the vector is:\n

index   |   name of value \n
----------------------&mdash; \n
    0   |       path \n
    1   |       name \n
    2   |       sprite_size_x \n
    3   |       sprite_size_y \n


<h2>Parameters:
</h2>
object_id : std::string \n
-> ID of the object/tile from what the values are asked.


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_object_sprite_value("1") \n
-> {"../../bin/objects/road1.png", "road1","32","32"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1ad34dad62ef7c5ea26250b97e9803776a';
        sec-mem-ref-line = '223';
        sec-mem-ref-name = 'leveleditor::load_tile_list';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ac24a3682f7478f78508e3e433b637407';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_new_map';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'map_name';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'background_music';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '571';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Create new map.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method creates a new record in the maps table.\n
This record consists the map_id, 
map name and the corresponding background music.\n


<h2>Parameters:
</h2>
map_name : std::string \n
-> name of the level that has to be created.

background_music : int \n
-> id of the background music of the level.


<h2>Example:
</h2>
set_new_map("level1",1)\n
There is now a new maps record in the database,\n
that has the name level1 with brackground_id 1.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'leveleditor::menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a4c6195e2934d72569b45041039a2be63';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'save_tiles';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'tile_path';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos_x';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pos_y';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'map_name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '605';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Saves the tiles in the database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method saves a tile in the database.\n
The tile values will be filterd if it is an object or an background tile.\n
It is very importend that if you want to save the level, that the map_name is spelled correctly.\n
If the map_name is not correctly spelled or if it doesn't exist, the level cannot be saved. \n
The same counts for the tile path. \n


<h2>Parameters:
</h2>
tile_path : std::string \n
-> path to the consisting image of the object/tile.

pos_x : int \n
-> x position where the object/tile should be placed in the map.

pos_y : int \n
-> y position where the object/tile should be placed in the map.

map_name : std::string \n
-> name of the map where the object/tile will be placed in.


<h2>Example:
</h2>
save_tiles("../../bin/objects/example.png",10,10,"level1")\n
This object is now saved in the objects table, \n
with a refference that is has to be placed in level1.\n
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231';
        sec-mem-ref-line = '7';
        sec-mem-ref-name = 'name';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'leveleditor::menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a29fe43df701460704744049aec28d58e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_available_levels';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '626';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the names of all levels in the database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns all names of the levels that are in the database.\n
This can be usefull so you can know if a level already exists. \n


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_available_levels()\n
-> {"level1","level2","level5"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'leveleditor::editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a9928c456c632f88d19cce26b8165bd6f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_level_ids';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '645';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the ID's of all levels in the database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns all ID's of the levels that are in the database.\n


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_level_ids()\n
-> {"1","2","5"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game::game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'leveleditor::editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1aa44f48b9869b3d5e0ce0429c6916e2b9';
        sec-mem-ref-line = '121';
        sec-mem-ref-name = 'leveleditor::menu_options';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = 'main';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a1dd21fbf729e949d804ba5509af2b295';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_level_object_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'level_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '670';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all object values of a level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the values of all objects that are assigned to the given level ID.\n


<h2>Parameters:
</h2>
level_id : std::string \n
-> id of the level from what the objects have to be loaded.


<h2>Return:
</h2>
list_of_data : std::map<std::string, std::vector<std::string>> \n
-> map that contains the asked data in the form of strings with name as key.\n


<h2>Example:
</h2>
get_level_object_value("level1") \n
-> {"road1":{"../../bin/objects/example.png","120","150","1"}}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game::game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'leveleditor::editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1af126860a2afcf82e53c9f895577bab76';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sf::IntRect
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_collision_objects';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'objects';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '696';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the not walkable objects.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the hitbox of an object that is not walkable.\n
The hitbox can be used to calculate the collision detection on. \n

<h2>Parameters:
</h2>
objects : std::vector<std::string> \n
-> values of one opbject.


<h2>Return:
</h2>
collision_rects : sf::IntRect \n
-> Hitbox of the not walkable object.\n


<h2>Example:
</h2>
get_collision_objects({...}) \n
-> (100,100,50,50)
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game::game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a5eb7fea00a56fe6ba33f602871798bc8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::map< std::string, std::vector< std::string > >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_level_background_value';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'level_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '721';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all background values of a level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the values of all background tiles that are assigned to the given level ID.\n


<h2>Parameters:
</h2>
level_id : std::string \n
-> id of the level from what the background tiles have to be loaded.


<h2>Return:
</h2>
list_of_data : std::map< std::string, std::vector<std::string> > \n
-> Map that contains the asked data in the form of strings with name as key.\n


<h2>Example:
</h2>
get_level_object_value("level1") \n
{"road1":{"../../bin/tiles/example.png","120","150","1"}}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1cb74ab7343ef603490518715297be83';
        sec-mem-ref-line = '66';
        sec-mem-ref-name = 'get_data';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game::game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'leveleditor::editor_loop';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ae959c21f71c8f9b1df8bde932a6c484b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_music';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'map_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '752';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get music of consisting map.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the path of a music file what is the background music of a level. \n
The values are searched by the ID of the map. \n


<h2>Parameters:
</h2>
map_id : std::string \n
-> ID of the level where the music file is requested.


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> list that contains the asked data in the form of strings.\n


<h2>Example:
</h2>
get_music("17") \n
-> ../../bin/music/x_gon_give_it_to_ya.wav
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'music_8cpp_1ae7835578f75b785e1ef2a3d0db9420b9';
        sec-mem-ref-line = '13';
        sec-mem-ref-name = 'music::play_music_from_map';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a59249e218b1bb9d811c50b5615312eaf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_quest_text';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'quest_id';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'part';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '785';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get quest part text.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the text of a quest part. \n
The values are searched by the ID of the of the quest and the given part number. \n


<h2>Parameters:
</h2>
quest_id : std::string \n
-> ID of the quest from what the text is requested.\n

part : std::string \n
-> number of the part in the quest where the text is requested from. \n


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> list that contains the asked data in the form of strings.\n


<h2>Example:
</h2>
get_quest_text("17") \n
-> {"Hello.","welcome"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game::game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'game::interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a9f75a32a77a498b1a328a53ade518ce7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_quest_parts';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'quest_id';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '811';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get all part numbers from quest.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the numbers of quest parts of a quest. \n
The values are searched by the ID of the quest. \n


<h2>Parameters:
</h2>
quest_id : std::string \n
-> ID of the quest from what the text is requested.\n


<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> list that contains the asked data in the form of strings.\n


<h2>Example:
</h2>
get_quest_parts("1") \n
-> {"1","3","4","5","6"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a46eaf7a077e7f3ff0b5e229142358f00';
        sec-mem-ref-line = '3';
        sec-mem-ref-name = 'game::game';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'game_8cpp_1a61adfafa4d31548fc94c853f10b9bf3b';
        sec-mem-ref-line = '184';
        sec-mem-ref-name = 'game::interact';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ad4d8bdf41eede1ae1363d0be8a2f60a9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'get_result';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '211';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get saved result.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method returns the result that is stored in the global result value.\n
the result value is a global and static because it is set by the callback function.\n

<h2>Return:
</h2>
list_of_data : std::vector<std::string> \n
-> List that contains the asked data in the form of strings.


<h2>Example:
</h2>
get_result()\n
Return: {"arno"}
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a148ec0a4430b7bc89059b29acbfc6318';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'result';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1ad28cc81f2ee03c6a15d26ff216353d71';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set_result';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '321';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Save result to static value.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method adds a new value, what is a result of an query,\n
to the static string vector result.\n
It does not overwrite it because there could be a result of multiple strings.\n
This function is only called by the static callback function.\n

<h2>Parameters:
</h2>
x : char* \n
-> Query result to add.


<h2>Example:
</h2>
set_result("arno")\n
Last value in result is now "arno".
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a148ec0a4430b7bc89059b29acbfc6318';
        sec-mem-ref-line = '10';
        sec-mem-ref-name = 'result';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae560c01f2e8e57cee454ecd8e38616eb';
        sec-mem-ref-line = '155';
        sec-mem-ref-name = 'get_player_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a370d018617316ff6489cbb97565b7af9';
        sec-mem-ref-line = '166';
        sec-mem-ref-name = 'get_player_sprite';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1af0e753f3af81ff1ff7f7582dcea4b0ed';
        sec-mem-ref-line = '83';
        sec-mem-ref-name = 'add_item_to_inventory';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1af04403a0cab4ee13a6f70b396e5b3a20';
        sec-mem-ref-line = '183';
        sec-mem-ref-name = 'get_npc_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae854372bac3fc5e681287e3cbf5b03de';
        sec-mem-ref-line = '178';
        sec-mem-ref-name = 'get_number_of_npcs';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a0ea1aa772cb693be29da61c6cadffd86';
        sec-mem-ref-line = '226';
        sec-mem-ref-name = 'get_object_sprite_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a2466fe5b0ec24e98190ee5763a4a69d1';
        sec-mem-ref-line = '239';
        sec-mem-ref-name = 'get_object_sprite_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ac24a3682f7478f78508e3e433b637407';
        sec-mem-ref-line = '279';
        sec-mem-ref-name = 'set_new_map';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a4c6195e2934d72569b45041039a2be63';
        sec-mem-ref-line = '293';
        sec-mem-ref-name = 'save_tiles';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a29fe43df701460704744049aec28d58e';
        sec-mem-ref-line = '389';
        sec-mem-ref-name = 'get_available_levels';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9928c456c632f88d19cce26b8165bd6f';
        sec-mem-ref-line = '394';
        sec-mem-ref-name = 'get_level_ids';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a1dd21fbf729e949d804ba5509af2b295';
        sec-mem-ref-line = '401';
        sec-mem-ref-name = 'get_level_object_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1af126860a2afcf82e53c9f895577bab76';
        sec-mem-ref-line = '502';
        sec-mem-ref-name = 'get_collision_objects';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a5eb7fea00a56fe6ba33f602871798bc8';
        sec-mem-ref-line = '452';
        sec-mem-ref-name = 'get_level_background_value';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1ae959c21f71c8f9b1df8bde932a6c484b';
        sec-mem-ref-line = '591';
        sec-mem-ref-name = 'get_music';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a59249e218b1bb9d811c50b5615312eaf';
        sec-mem-ref-line = '607';
        sec-mem-ref-name = 'get_quest_text';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1a9f75a32a77a498b1a328a53ade518ce7';
        sec-mem-ref-line = '636';
        sec-mem-ref-name = 'get_quest_parts';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8cpp_1aff61710f28dd54827b67a99c24fbdb0d';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'callback';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1aff61710f28dd54827b67a99c24fbdb0d';
        sec-mem-ref-line = '29';
        sec-mem-ref-name = 'callback';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1aff61710f28dd54827b67a99c24fbdb0d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'callback';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
void *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'NotUsed';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'argc';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'argv';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char **
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'azColName';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '819';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get value from database.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method is used to get the value from the database.
What the function does is explained in the sqlite3.hpp file.
In this class we use it to store the found data in a global static value.
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        sec-mem-ref-line = '321';
        sec-mem-ref-name = 'set_result';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classsql_1a4bdab1846b3789ddd83521d5eec019b5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'check_query_request';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '36';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks if query is executed correctly.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method checks if the executed query is correctly procesed.\n
If that is not the case this function will print an error on the command prompt.\n


<h2>Example:
</h2>
check_query_request()\n
<em>no error, so do nothing</em>
_EnD_oF_dEf_TeXt_;
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a1ad7137a182503f7676b53f6fa2786ed';
        sec-mem-ref-line = '18';
        sec-mem-ref-name = 'rc';
    };
      sec-mem-referenceto = {
        sec-mem-ref-id = 'sql_8hpp_1a2d17635b5b4cf20d48ba354e2330b734';
        sec-mem-ref-line = '21';
        sec-mem-ref-name = '_ERROR_MESSAGE';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classsql_1a16d6812a301ce81d856e7d5800bf20fd';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
sqlite3 *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '15';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac9b186df2a51d7eda72cd4a9c34c0624';
        sec-mem-ref-line = '6';
        sec-mem-ref-name = 'sql';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a67805540e55f3cfb1849178023aa39b2';
        sec-mem-ref-line = '24';
        sec-mem-ref-name = '~sql';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classsql_1aa0b79c68df90d2e2a3f829e25a44b878';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'database_path';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "../../bin/database.db"
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '16';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac9b186df2a51d7eda72cd4a9c34c0624';
        sec-mem-ref-line = '6';
        sec-mem-ref-name = 'sql';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classsql_1a1ad7137a182503f7676b53f6fa2786ed';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rc';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a4bdab1846b3789ddd83521d5eec019b5';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'check_query_request';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classsql_1a9eacc4ecb1f8cb870c2234adba85d31f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'connection';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '19';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac9b186df2a51d7eda72cd4a9c34c0624';
        sec-mem-ref-line = '6';
        sec-mem-ref-name = 'sql';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classsql_1a2d17635b5b4cf20d48ba354e2330b734';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_ERROR_MESSAGE';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '21';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a4bdab1846b3789ddd83521d5eec019b5';
        sec-mem-ref-line = '36';
        sec-mem-ref-name = 'check_query_request';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1ac70e1da6d9e49f114bcf639fd1e6f86c';
        sec-mem-ref-line = '43';
        sec-mem-ref-name = 'execute_query_without_return';
    };
      sec-mem-referenceby = {
        sec-mem-ref-id = 'sql_8cpp_1a53dd323de395c13534e63a3482190777';
        sec-mem-ref-line = '48';
        sec-mem-ref-name = 'execute_query_with_return';
    };
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classsql_1a88d67d82b4bd8be3d1e31719a0d8f35e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'data';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= "Callback function called"
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      sec-mem-desc-line = '22';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
  cp-fileline  = '13';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 169;
        node-label = 'sql';
        node-link = {
          node-link-id = 'classsql';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classunknown__shape';
  cp-name   = 'unknown_shape';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classunknown__shape_1acba61daef65acb20740ee969373afa2d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'unknown_shape';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classunknown__shape_1a79e591bd483fc895aeeffccffe56ea14';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'what';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classunknown__shape_1a315cb57042a51070978ee5fbb8150a81';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 's';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  cp-fileline  = '36';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 171;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 170;
        node-label = 'unknown_shape';
        node-link = {
          node-link-id = 'classunknown__shape';
        };
        node-child = {
          child-id = '171';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 173;
        node-label = 'exception';
      }; /* node */
      node = {
        node-id    = 172;
        node-label = 'unknown_shape';
        node-link = {
          node-link-id = 'classunknown__shape';
        };
        node-child = {
          child-id = '173';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'classunknown__tile';
  cp-name   = 'unknown_tile';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'classstd_1_1exception';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classunknown__tile_1a461cac6c68bff3bb3840332dac3930a7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'unknown_tile';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const std::string &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'name';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'classunknown__tile_1acb0d54524c73e359ac6f222a698fc30c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'what';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'classunknown__tile_1a9327fd93d7fd68755f5b656e1943adfb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 's';
      sec-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  cp-fileline  = '50';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 174;
        node-label = 'unknown_tile';
        node-link = {
          node-link-id = 'classunknown__tile';
        };
        node-child = {
          child-id = '175';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 175;
        node-label = 'std::exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 176;
        node-label = 'unknown_tile';
        node-link = {
          node-link-id = 'classunknown__tile';
        };
        node-child = {
          child-id = '177';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 177;
        node-label = 'std::exception';
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
file = {
  file-id   = 'ability_8cpp';
  file-name = 'ability.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'ability_8hpp';
  file-name = 'ability.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/ability.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'button__actions_8cpp';
  file-name = 'button_actions.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8cpp_1a94ef0400a00795316cd4e374db2af104';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Vector2f_from_Vector2i';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2i
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vector';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
      func-mem-desc-line = '6';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert a sf::vector2i to sf::Vector2f.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will convert a sf::Vector2i (a vector consisting 2 integer values), \n
to a sf::Vector2f (a vector consisting 2 float values). \n


<h2>Parameters:
</h2>
vector : sf::Vector2f \n
-> Position to be converted.


<h2>Return:
</h2>
Converted sf::Vector2i : sf::Vector2f \n
-> Converted vector2i.


<h2>Example:
</h2>
Vector2f_from_Vector2i({100 : int, 100 : int}) \n
-> {100 : float, 100 : float}
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
        func-mem-ref-line = '46';
        func-mem-ref-name = 'get_mouse_position';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8cpp_1a6a2c7019e201b42b13d3032fc538298d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_move_direction_from_button_keys';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
      func-mem-desc-line = '11';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the move direction if move button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will check if one of the buttons in the defined struct of move action buttons is pressed. \n
if that is the case, the method will return the move direction of the consisting move. \n


<h2>Return:
</h2>
direction : sf::Vector2f \n
-> Direction in which the player should move.\n


<h2>Example:
</h2>
get_move_direction_from_button_keys \n
-> {-1, 0}
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        func-mem-ref-line = '121';
        func-mem-ref-name = 'game::view_start_dialogs';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        func-mem-ref-line = '294';
        func-mem-ref-name = 'game::move_player';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8cpp_1aac3d825fa7b0f54fd0340a611b9639d5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_skill_from_button_keys';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
      func-mem-desc-line = '25';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if skill button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will check if one of the buttons in the defined struct of skill_buttons is pressed. \n
if that is the case, the method will return the name of the consisting skill. \n


<h2>Return:
</h2>
skill_name : std::string \n
-> name of the skill button that is pressed.


<h2>Example:
</h2>
get_skill_from_button_keys() \n
-> "shoot_arrow"
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        func-mem-ref-line = '269';
        func-mem-ref-name = 'game::player_skill';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8cpp_1a147658cb884fa19f4a0a255ea858b7b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_action_name_from_button_keys';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
      func-mem-desc-line = '35';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the name of a move if move button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will return the name from a move if one of the buttons, \n
in the defined struct of move action buttons, is pressed. \n


<h2>Return:
</h2>
direction : sf::Vector2f \n
-> Direction in which the player should move.\n


<h2>Example:
</h2>
get_action_name_from_button_keys() \n
-> "walk_up"
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231';
        func-mem-ref-line = '7';
        func-mem-ref-name = 'name';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        func-mem-ref-line = '294';
        func-mem-ref-name = 'game::move_player';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_mouse_position';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'window';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
      func-mem-desc-line = '46';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the position of the mouse.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will return the position of the mouse on the window. \n


<h2>Parameters:
</h2>
window : sf::RenderWindow&
-> window to check the mouse on.


<h2>Return:
</h2>
mouse position : sf::Vector2f \n
-> Direction in which the player should move.\n


<h2>Example:
</h2>
get_mouse_position( window) \n
-> {100, 100}
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'button__actions_8cpp_1a94ef0400a00795316cd4e374db2af104';
        func-mem-ref-line = '6';
        func-mem-ref-name = 'Vector2f_from_Vector2i';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1ae263cdc30dcc916b98b0ddbbf0a6fccc';
        func-mem-ref-line = '105';
        func-mem-ref-name = 'game::mouse_intersects_left_edge';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1a273013552bc7ad8fef9d9192aad3cc0c';
        func-mem-ref-line = '109';
        func-mem-ref-name = 'game::mouse_intersects_right_edge';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1abb1c33c5a73de27e4ebd20e1b61dc3dc';
        func-mem-ref-line = '113';
        func-mem-ref-name = 'game::mouse_intersects_upper_edge';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1a34a5241e205d0985a9e477a3dd77ba08';
        func-mem-ref-line = '117';
        func-mem-ref-name = 'game::mouse_intersects_down_edge';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8cpp_1a66f5c6d1b29c823603568294cf3702ea';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'check_mouse';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if left mouse button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will check if the left mouse button is pressed. \n
If that is the case the function will return true. \n


<h2>Return:
</h2>
button_pressed : bool \n
-> If the mousebutton is pressed.


<h2>Example:
</h2>
check_mouse() \n
-> true
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'button__actions_8hpp';
  file-name = 'button_actions.hpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8hpp_1a94ef0400a00795316cd4e374db2af104';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Vector2f_from_Vector2i';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2i
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'vector';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      func-mem-desc-line = '58';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert a sf::vector2i to sf::Vector2f.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will convert a sf::Vector2i (a vector consisting 2 integer values), \n
to a sf::Vector2f (a vector consisting 2 float values). \n


<h2>Parameters:
</h2>
vector : sf::Vector2f \n
-> Position to be converted.


<h2>Return:
</h2>
Converted sf::Vector2i : sf::Vector2f \n
-> Converted vector2i.


<h2>Example:
</h2>
Vector2f_from_Vector2i({100 : int, 100 : int}) \n
-> {100 : float, 100 : float}
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'button__actions_8cpp_1a067f53aa6474ce70abccc5bbd28ad01d';
        func-mem-ref-line = '46';
        func-mem-ref-name = 'get_mouse_position';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8hpp_1aac3d825fa7b0f54fd0340a611b9639d5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_skill_from_button_keys';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      func-mem-desc-line = '78';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if skill button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will check if one of the buttons in the defined struct of skill_buttons is pressed. \n
if that is the case, the method will return the name of the consisting skill. \n


<h2>Return:
</h2>
skill_name : std::string \n
-> name of the skill button that is pressed.


<h2>Example:
</h2>
get_skill_from_button_keys() \n
-> "shoot_arrow"
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1a478a3366ffd0e10713b0abc3adb65696';
        func-mem-ref-line = '269';
        func-mem-ref-name = 'game::player_skill';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8hpp_1a6a2c7019e201b42b13d3032fc538298d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_move_direction_from_button_keys';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      func-mem-desc-line = '98';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the move direction if move button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will check if one of the buttons in the defined struct of move action buttons is pressed. \n
if that is the case, the method will return the move direction of the consisting move. \n


<h2>Return:
</h2>
direction : sf::Vector2f \n
-> Direction in which the player should move.\n


<h2>Example:
</h2>
get_move_direction_from_button_keys \n
-> {-1, 0}
_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        func-mem-ref-line = '121';
        func-mem-ref-name = 'game::view_start_dialogs';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        func-mem-ref-line = '294';
        func-mem-ref-name = 'game::move_player';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8hpp_1a147658cb884fa19f4a0a255ea858b7b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_action_name_from_button_keys';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      func-mem-desc-line = '118';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the name of a move if move button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will return the name from a move if one of the buttons, \n
in the defined struct of move action buttons, is pressed. \n


<h2>Return:
</h2>
direction : sf::Vector2f \n
-> Direction in which the player should move.\n


<h2>Example:
</h2>
get_action_name_from_button_keys() \n
-> "walk_up"
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231';
        func-mem-ref-line = '7';
        func-mem-ref-name = 'name';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1ab13015cdc535671de1dd7a5a7970a238';
        func-mem-ref-line = '294';
        func-mem-ref-name = 'game::move_player';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8hpp_1a067f53aa6474ce70abccc5bbd28ad01d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Vector2f
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'get_mouse_position';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::RenderWindow &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'window';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      func-mem-desc-line = '143';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the position of the mouse.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will return the position of the mouse on the window. \n


<h2>Parameters:
</h2>
window : sf::RenderWindow&
-> window to check the mouse on.


<h2>Return:
</h2>
mouse position : sf::Vector2f \n
-> Direction in which the player should move.\n


<h2>Example:
</h2>
get_mouse_position( window) \n
-> {100, 100}
_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'button__actions_8cpp_1a94ef0400a00795316cd4e374db2af104';
        func-mem-ref-line = '6';
        func-mem-ref-name = 'Vector2f_from_Vector2i';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1ae263cdc30dcc916b98b0ddbbf0a6fccc';
        func-mem-ref-line = '105';
        func-mem-ref-name = 'game::mouse_intersects_left_edge';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1a273013552bc7ad8fef9d9192aad3cc0c';
        func-mem-ref-line = '109';
        func-mem-ref-name = 'game::mouse_intersects_right_edge';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1abb1c33c5a73de27e4ebd20e1b61dc3dc';
        func-mem-ref-line = '113';
        func-mem-ref-name = 'game::mouse_intersects_upper_edge';
    };
      func-mem-referenceby = {
        func-mem-ref-id = 'game_8cpp_1a34a5241e205d0985a9e477a3dd77ba08';
        func-mem-ref-line = '117';
        func-mem-ref-name = 'game::mouse_intersects_down_edge';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'button__actions_8hpp_1a66f5c6d1b29c823603568294cf3702ea';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'check_mouse';
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      func-mem-desc-line = '163';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Check if left mouse button is pressed.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This method will check if the left mouse button is pressed. \n
If that is the case the function will return true. \n


<h2>Return:
</h2>
button_pressed : bool \n
-> If the mousebutton is pressed.


<h2>Example:
</h2>
check_mouse() \n
-> true
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Keyboard::Key
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'Key';
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '6';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'name';
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '7';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-referenceby = {
        var-mem-ref-id = 'button__actions_8cpp_1a147658cb884fa19f4a0a255ea858b7b8';
        var-mem-ref-line = '35';
        var-mem-ref-name = 'get_action_name_from_button_keys';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'item_8cpp_1ab7c2fa653e0f9a565283b60ca325f2a7';
        var-mem-ref-line = '8';
        var-mem-ref-name = 'item::get_name';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'item_8cpp_1aa5a9140482a7d88d6a3eea342cb0c082';
        var-mem-ref-line = '15';
        var-mem-ref-name = 'item::get_in_game_name';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'sql_8cpp_1a4c6195e2934d72569b45041039a2be63';
        var-mem-ref-line = '293';
        var-mem-ref-name = 'sql::save_tiles';
    };
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'x';
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '8';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-referenceby = {
        var-mem-ref-id = 'game_8cpp_1af99a7ac774385373a015bd3082049bd2';
        var-mem-ref-line = '121';
        var-mem-ref-name = 'game::view_start_dialogs';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'leveleditor_8cpp_1a2ee968e4a8d305cdb1465397388b63f2';
        var-mem-ref-line = '36';
        var-mem-ref-name = 'leveleditor::editor_loop';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'leveleditor_8cpp_1a675038d66c5ea045d4e3b922e28a23ec';
        var-mem-ref-line = '186';
        var-mem-ref-name = 'leveleditor::load_rectangles';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'npc_8cpp_1a3f32867195150317774af508034f0a41';
        var-mem-ref-line = '65';
        var-mem-ref-name = 'npc::load_action';
    };
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1aa4f0d3eebc3c443f9be81bf48561a217';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'y';
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '8';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-referenceby = {
        var-mem-ref-id = 'leveleditor_8cpp_1a675038d66c5ea045d4e3b922e28a23ec';
        var-mem-ref-line = '186';
        var-mem-ref-name = 'leveleditor::load_rectangles';
    };
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1a482463c81347dda7bee1190e25bdb0a1';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const struct __anonymous__
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'actions';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
	{ sf::Keyboard::Left,	"walk_left",	-2,  0 },
	{ sf::Keyboard::Right,	"walk_right",	+2,  0 },
	{ sf::Keyboard::Up,		"walk_up",		 0, -2 },
	{ sf::Keyboard::Down,	"walk_down",	 0, +2 },

	{ sf::Keyboard::A,	"walk_left",	-2,  0 },
	{ sf::Keyboard::D,	"walk_right",	+2,  0 },
	{ sf::Keyboard::W,	"walk_up",		 0, -2 },
	{ sf::Keyboard::S,	"walk_down",	 0, +2 }
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '19';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-referenceby = {
        var-mem-ref-id = 'button__actions_8cpp_1a6a2c7019e201b42b13d3032fc538298d';
        var-mem-ref-line = '11';
        var-mem-ref-name = 'get_move_direction_from_button_keys';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'button__actions_8cpp_1a147658cb884fa19f4a0a255ea858b7b8';
        var-mem-ref-line = '35';
        var-mem-ref-name = 'get_action_name_from_button_keys';
    };
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1a0765116058c6d804c6a3e99a2e55a704';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
sf::Mouse::Button
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mouse_key';
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '24';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'button__actions_8hpp_1aa3b9a687b77321bb0bf1bba117df6d51';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
const struct __anonymous__
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'skills';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= {
	{ 	sf::Keyboard::Space, 	sf::Mouse::Left,		"slash"			},
	{ 	sf::Keyboard::Right, 	sf::Mouse::Right,		"cast_spell"	},
	{ 	sf::Keyboard::F,		sf::Mouse::XButton1,	"shoot_arrow"	},
	{ 	sf::Keyboard::Down, 	sf::Mouse::XButton2,	"poke"			}
}
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
      var-mem-desc-line = '32';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-referenceby = {
        var-mem-ref-id = 'button__actions_8cpp_1aac3d825fa7b0f54fd0340a611b9639d5';
        var-mem-ref-line = '25';
        var-mem-ref-name = 'get_skill_from_button_keys';
    };
    }; /* var-member */
    };
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'dialogbox_8cpp';
  file-name = 'dialogbox.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'dialogbox_8hpp';
  file-name = 'dialogbox.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/dialogbox.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'exception__list_8hpp';
  file-name = 'exception_list.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/exception_list.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'game_8cpp';
  file-name = 'game.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'game_8hpp';
  file-name = 'game.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'inventory_8cpp';
  file-name = 'inventory.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'inventory_8hpp';
  file-name = 'inventory.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/inventory.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'item_8cpp';
  file-name = 'item.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'item_8hpp';
  file-name = 'item.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/item.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'leveleditor_8cpp';
  file-name = 'leveleditor.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'leveleditor_8hpp';
  file-name = 'leveleditor.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'main_8cpp';
  file-name = 'main.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'main_8cpp_1a235bce26738e0eec7d7ed336e30e538d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'intro';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Music &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
std::string
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'path';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main.cpp';
      func-mem-desc-line = '13';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        func-mem-ref-line = '24';
        func-mem-ref-name = 'main';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'main_8cpp_1a357ffa2037bfb7515a059fd98995e184';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'intro_stop';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
sf::Music &
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'm';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main.cpp';
      func-mem-desc-line = '20';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceby = {
        func-mem-ref-id = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
        func-mem-ref-line = '24';
        func-mem-ref-name = 'main';
    };
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'main';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argc';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'argv';
        func-mem-param-array = '[]';
      }; /*        func-mem-param--param */
      func-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main.cpp';
      func-mem-desc-line = '24';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-referenceto = {
        func-mem-ref-id = 'main_8cpp_1a235bce26738e0eec7d7ed336e30e538d';
        func-mem-ref-line = '13';
        func-mem-ref-name = 'intro';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8cpp_1a555c4191cafced116939b5c6c354fe3e';
        func-mem-ref-line = '60';
        func-mem-ref-name = 'main_menu::gid_gud_splash';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8cpp_1a83e10a5ce65747f1de76e40d32dd8e5b';
        func-mem-ref-line = '81';
        func-mem-ref-name = 'main_menu::loading';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'sql_8cpp_1a9928c456c632f88d19cce26b8165bd6f';
        func-mem-ref-line = '394';
        func-mem-ref-name = 'sql::get_level_ids';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'music_8cpp_1ae7835578f75b785e1ef2a3d0db9420b9';
        func-mem-ref-line = '13';
        func-mem-ref-name = 'music::play_music_from_map';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main_8cpp_1a357ffa2037bfb7515a059fd98995e184';
        func-mem-ref-line = '20';
        func-mem-ref-name = 'intro_stop';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8cpp_1ac653f7645e7dab1807f141ba2395dc5c';
        func-mem-ref-line = '17';
        func-mem-ref-name = 'main_menu::show_menu';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8cpp_1a9314da13b6b8a7cd40dee3d45f029835';
        func-mem-ref-line = '29';
        func-mem-ref-name = 'main_menu::button_pressed';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8hpp_1a33ab93a1dbb2117179aa7f92e7c75b57';
        func-mem-ref-line = '16';
        func-mem-ref-name = 'main_menu::level_editor_button';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8hpp_1a673d7133b0bbaf357bd1578830545352';
        func-mem-ref-line = '14';
        func-mem-ref-name = 'main_menu::view1';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8cpp_1a924f8d3f2d87b382a8590055cda2f549';
        func-mem-ref-line = '33';
        func-mem-ref-name = 'main_menu::load_screen';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'main__menu_8hpp_1ac1da4a5a730e90c687bbe6cf368308ad';
        func-mem-ref-line = '17';
        func-mem-ref-name = 'main_menu::play_game_button';
    };
      func-mem-referenceto = {
        func-mem-ref-id = 'game_8cpp_1a2b80a1fbc6d723e78d3c86d2f8ff24d4';
        func-mem-ref-line = '52';
        func-mem-ref-name = 'game::game_loop';
    };
    }; /* func-member */
    };
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'main__menu_8cpp';
  file-name = 'main_menu.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'main__menu_8hpp';
  file-name = 'main_menu.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main_menu.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'music_8cpp';
  file-name = 'music.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'music_8hpp';
  file-name = 'music.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/music.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'npc_8cpp';
  file-name = 'npc.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'npc_8hpp';
  file-name = 'npc.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/npc.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'objects_8cpp';
  file-name = 'objects.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'objects_8hpp';
  file-name = 'objects.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/objects.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'player_8cpp';
  file-name = 'player.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'player_8hpp';
  file-name = 'player.hpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/player.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sql_8cpp';
  file-name = 'sql.cpp';
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sql_8hpp';
  file-name = 'sql.hpp';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'sql_8hpp_1a148ec0a4430b7bc89059b29acbfc6318';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static std::vector< std::string >
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'result';
      var-mem-desc-file = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
      var-mem-desc-line = '10';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-referenceby = {
        var-mem-ref-id = 'sql_8cpp_1ad4d8bdf41eede1ae1363d0be8a2f60a9';
        var-mem-ref-line = '103';
        var-mem-ref-name = 'sql::get_result';
    };
      var-mem-referenceby = {
        var-mem-ref-id = 'sql_8hpp_1ad28cc81f2ee03c6a15d26ff216353d71';
        var-mem-ref-line = '321';
        var-mem-ref-name = 'sql::set_result';
    };
    }; /* var-member */
    };
  file-full-name  = 'D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/sql.hpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
