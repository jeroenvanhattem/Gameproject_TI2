<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classaction" kind="class" language="C++" prot="public">
    <compoundname>action</compoundname>
    <includes refid="leveleditor_8hpp" local="no">leveleditor.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classaction_1a949abf979a5255f54e88a6a4273afebe" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool() &gt;</type>
        <definition>std::function&lt; bool() &gt; action::condition</definition>
        <argsstring></argsstring>
        <name>condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="13" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classaction_1a1cab66c9a7adf408ebb3734e5d95315b" prot="private" static="no" mutable="no">
        <type>std::function&lt; void() &gt;</type>
        <definition>std::function&lt; void() &gt; action::work</definition>
        <argsstring></argsstring>
        <name>work</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="14" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classaction_1a326b1acaf626d97dbaa9c52f6f3f90e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>action::action</definition>
        <argsstring>(std::function&lt; bool() &gt; condition, std::function&lt; void() &gt; work)</argsstring>
        <name>action</name>
        <param>
          <type>std::function&lt; bool() &gt;</type>
          <declname>condition</declname>
        </param>
        <param>
          <type>std::function&lt; void() &gt;</type>
          <declname>work</declname>
        </param>
        <briefdescription>
<para>Template function for bool. </para>        </briefdescription>
        <detaileddescription>
<para>This method will create a boolean function with a specified use. <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="21" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classaction_1af9e6424028e398ca05829d3538789840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>action::action</definition>
        <argsstring>(std::function&lt; void() &gt; work)</argsstring>
        <name>action</name>
        <param>
          <type>std::function&lt; void() &gt;</type>
          <declname>work</declname>
        </param>
        <briefdescription>
<para>Template function for void. </para>        </briefdescription>
        <detaileddescription>
<para>This method will create a void function with a specified use. <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="31" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classaction_1ad39321beff71da26f4aef37916974f11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>action::action</definition>
        <argsstring>(sf::Keyboard::Key key, std::function&lt; void() &gt; work)</argsstring>
        <name>action</name>
        <param>
          <type><ref refid="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" kindref="member">sf::Keyboard::Key</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::function&lt; void() &gt;</type>
          <declname>work</declname>
        </param>
        <briefdescription>
<para>Template function for key pressing. </para>        </briefdescription>
        <detaileddescription>
<para>This method will create a boolean function with a specified use. <linebreak/>
And returns if a specified key is pressed. <linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="42" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classaction_1a55a91caa9803002fa7ddd6e9e9e46dc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>action::action</definition>
        <argsstring>(sf::Mouse::Button button, std::function&lt; void() &gt; work)</argsstring>
        <name>action</name>
        <param>
          <type>sf::Mouse::Button</type>
          <declname>button</declname>
        </param>
        <param>
          <type>std::function&lt; void() &gt;</type>
          <declname>work</declname>
        </param>
        <briefdescription>
<para>Template function for mouse button. </para>        </briefdescription>
        <detaileddescription>
<para>This method will create a boolean function with a specified use. <linebreak/>
And returns if a specified mouse button is pressed. <linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="53" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classaction_1a92c003677656b5b3e6e58b19376e6b04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void action::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Overloader for <ref refid="classaction_1a92c003677656b5b3e6e58b19376e6b04" kindref="member">operator()()</ref> </para>        </briefdescription>
        <detaileddescription>
<para>This method creates the <ref refid="classaction_1a92c003677656b5b3e6e58b19376e6b04" kindref="member">operator()()</ref> so it can be used in this class. <linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="63" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" line="11" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/leveleditor.hpp" bodystart="11" bodyend="68"/>
    <listofallmembers>
      <member refid="classaction_1a326b1acaf626d97dbaa9c52f6f3f90e4" prot="public" virt="non-virtual"><scope>action</scope><name>action</name></member>
      <member refid="classaction_1af9e6424028e398ca05829d3538789840" prot="public" virt="non-virtual"><scope>action</scope><name>action</name></member>
      <member refid="classaction_1ad39321beff71da26f4aef37916974f11" prot="public" virt="non-virtual"><scope>action</scope><name>action</name></member>
      <member refid="classaction_1a55a91caa9803002fa7ddd6e9e9e46dc6" prot="public" virt="non-virtual"><scope>action</scope><name>action</name></member>
      <member refid="classaction_1a949abf979a5255f54e88a6a4273afebe" prot="private" virt="non-virtual"><scope>action</scope><name>condition</name></member>
      <member refid="classaction_1a92c003677656b5b3e6e58b19376e6b04" prot="public" virt="non-virtual"><scope>action</scope><name>operator()</name></member>
      <member refid="classaction_1a1cab66c9a7adf408ebb3734e5d95315b" prot="private" virt="non-virtual"><scope>action</scope><name>work</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
