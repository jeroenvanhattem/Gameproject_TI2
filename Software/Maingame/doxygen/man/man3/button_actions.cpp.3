.TH "D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" 3 "Fri Feb 3 2017" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'button_actions\&.hpp'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "sf::Vector2f \fBVector2f_from_Vector2i\fP (sf::Vector2i vector)"
.br
.RI "Convert a sf::vector2i to sf::Vector2f\&. "
.ti -1c
.RI "sf::Vector2f \fBget_move_direction_from_button_keys\fP ()"
.br
.RI "Get the move direction if move button is pressed\&. "
.ti -1c
.RI "std::string \fBget_skill_from_button_keys\fP ()"
.br
.RI "Check if skill button is pressed\&. "
.ti -1c
.RI "std::string \fBget_action_name_from_button_keys\fP ()"
.br
.RI "Get the name of a move if move button is pressed\&. "
.ti -1c
.RI "sf::Vector2f \fBget_mouse_position\fP (sf::RenderWindow &window)"
.br
.RI "Get the position of the mouse\&. "
.ti -1c
.RI "bool \fBcheck_mouse\fP ()"
.br
.RI "Check if left mouse button is pressed\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool check_mouse ()"

.PP
Check if left mouse button is pressed\&. This method will check if the left mouse button is pressed\&. 
.br
If that is the case the function will return true\&. 
.br
.PP
.SS "Return: "
.PP
button_pressed : bool 
.br
-> If the mousebutton is pressed\&.
.PP
.SS "Example: "
.PP
\fBcheck_mouse()\fP 
.br
-> true 
.PP
Definition at line 50 of file button_actions\&.cpp\&.
.SS "std::string get_action_name_from_button_keys ()"

.PP
Get the name of a move if move button is pressed\&. This method will return the name from a move if one of the buttons, 
.br
in the defined struct of move action buttons, is pressed\&. 
.br
.PP
.SS "Return: "
.PP
direction : sf::Vector2f 
.br
-> Direction in which the player should move\&.
.br
.PP
.SS "Example: "
.PP
\fBget_action_name_from_button_keys()\fP 
.br
-> 'walk_up' 
.PP
Definition at line 35 of file button_actions\&.cpp\&.
.SS "sf::Vector2f get_mouse_position (sf::RenderWindow & window)"

.PP
Get the position of the mouse\&. This method will return the position of the mouse on the window\&. 
.br
.PP
.SS "Parameters: "
.PP
window : sf::RenderWindow& -> window to check the mouse on\&.
.PP
.SS "Return: "
.PP
mouse position : sf::Vector2f 
.br
-> Direction in which the player should move\&.
.br
.PP
.SS "Example: "
.PP
get_mouse_position( window) 
.br
-> {100, 100} 
.PP
Definition at line 46 of file button_actions\&.cpp\&.
.SS "sf::Vector2f get_move_direction_from_button_keys ()"

.PP
Get the move direction if move button is pressed\&. This method will check if one of the buttons in the defined struct of move action buttons is pressed\&. 
.br
if that is the case, the method will return the move direction of the consisting move\&. 
.br
.PP
.SS "Return: "
.PP
direction : sf::Vector2f 
.br
-> Direction in which the player should move\&.
.br
.PP
.SS "Example: "
.PP
get_move_direction_from_button_keys 
.br
-> {-1, 0} 
.PP
Definition at line 11 of file button_actions\&.cpp\&.
.SS "std::string get_skill_from_button_keys ()"

.PP
Check if skill button is pressed\&. This method will check if one of the buttons in the defined struct of skill_buttons is pressed\&. 
.br
if that is the case, the method will return the name of the consisting skill\&. 
.br
.PP
.SS "Return: "
.PP
skill_name : std::string 
.br
-> name of the skill button that is pressed\&.
.PP
.SS "Example: "
.PP
\fBget_skill_from_button_keys()\fP 
.br
-> 'shoot_arrow' 
.PP
Definition at line 25 of file button_actions\&.cpp\&.
.SS "sf::Vector2f Vector2f_from_Vector2i (sf::Vector2i vector)"

.PP
Convert a sf::vector2i to sf::Vector2f\&. This method will convert a sf::Vector2i (a vector consisting 2 integer values), 
.br
to a sf::Vector2f (a vector consisting 2 float values)\&. 
.br
.PP
.SS "Parameters: "
.PP
vector : sf::Vector2f 
.br
-> Position to be converted\&.
.PP
.SS "Return: "
.PP
Converted sf::Vector2i : sf::Vector2f 
.br
-> Converted vector2i\&.
.PP
.SS "Example: "
.PP
Vector2f_from_Vector2i({100 : int, 100 : int}) 
.br
-> {100 : float, 100 : float} 
.PP
Definition at line 6 of file button_actions\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
