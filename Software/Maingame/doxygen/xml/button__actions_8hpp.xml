<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="button__actions_8hpp" kind="file" language="C++">
    <compoundname>button_actions.hpp</compoundname>
    <includes local="no">SFML\Graphics.hpp</includes>
    <includedby refid="button__actions_8cpp" local="yes">D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp</includedby>
    <includedby refid="game_8hpp" local="yes">D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp</includedby>
    <includedby refid="main_8cpp" local="yes">D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main.cpp</includedby>
    <incdepgraph>
      <node id="22">
        <label>SFML\Graphics.hpp</label>
      </node>
      <node id="21">
        <label>D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp</label>
        <link refid="button__actions_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="24">
        <label>D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp</label>
        <link refid="button__actions_8cpp"/>
      </node>
      <node id="25">
        <label>D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.hpp</label>
        <link refid="game_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/game.cpp</label>
        <link refid="game_8cpp"/>
      </node>
      <node id="23">
        <label>D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp</label>
        <link refid="button__actions_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" prot="public" static="no" mutable="no">
        <type>sf::Keyboard::Key</type>
        <definition>sf::Keyboard::Key Key</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="6" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="7" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" bodystart="7" bodyend="-1"/>
        <referencedby refid="button__actions_8hpp_1a147658cb884fa19f4a0a255ea858b7b8" compoundref="button__actions_8cpp" startline="35" endline="43">get_action_name_from_button_keys</referencedby>
        <referencedby refid="classitem_1ab7c2fa653e0f9a565283b60ca325f2a7" compoundref="item_8cpp" startline="8" endline="13">item::get_name</referencedby>
        <referencedby refid="classitem_1aa5a9140482a7d88d6a3eea342cb0c082" compoundref="item_8cpp" startline="15" endline="20">item::get_in_game_name</referencedby>
        <referencedby refid="classsql_1a4c6195e2934d72569b45041039a2be63" compoundref="sql_8cpp" startline="293" endline="386">sql::save_tiles</referencedby>
      </memberdef>
      <memberdef kind="variable" id="button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="8" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" bodystart="8" bodyend="-1"/>
        <referencedby refid="classgame_1a2b80a1fbc6d723e78d3c86d2f8ff24d4" compoundref="game_8cpp" startline="52" endline="96">game::game_loop</referencedby>
        <referencedby refid="classleveleditor_1a2ee968e4a8d305cdb1465397388b63f2" compoundref="leveleditor_8cpp" startline="36" endline="119">leveleditor::editor_loop</referencedby>
        <referencedby refid="classnpc_1ae8d1bfcd87382237192ebb5b6def33a5" compoundref="npc_8cpp" startline="55" endline="62">npc::move</referencedby>
      </memberdef>
      <memberdef kind="variable" id="button__actions_8hpp_1aa4f0d3eebc3c443f9be81bf48561a217" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="8" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" bodystart="8" bodyend="-1"/>
        <referencedby refid="classleveleditor_1a2ee968e4a8d305cdb1465397388b63f2" compoundref="leveleditor_8cpp" startline="36" endline="119">leveleditor::editor_loop</referencedby>
      </memberdef>
      <memberdef kind="variable" id="button__actions_8hpp_1a482463c81347dda7bee1190e25bdb0a1" prot="public" static="no" mutable="no">
        <type>const struct @0</type>
        <definition>const struct @0 actions[]</definition>
        <argsstring>[]</argsstring>
        <name>actions</name>
        <initializer>= {
	{ sf::Keyboard::Left,	&quot;walk_left&quot;,	-2,  0 },
	{ sf::Keyboard::Right,	&quot;walk_right&quot;,	+2,  0 },
	{ sf::Keyboard::Up,		&quot;walk_up&quot;,		 0, -2 },
	{ sf::Keyboard::Down,	&quot;walk_down&quot;,	 0, +2 },

	{ sf::Keyboard::A,	&quot;walk_left&quot;,	-2,  0 },
	{ sf::Keyboard::D,	&quot;walk_right&quot;,	+2,  0 },
	{ sf::Keyboard::W,	&quot;walk_up&quot;,		 0, -2 },
	{ sf::Keyboard::S,	&quot;walk_down&quot;,	 0, +2 }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="19" column="1"/>
        <referencedby refid="button__actions_8hpp_1a6a2c7019e201b42b13d3032fc538298d" compoundref="button__actions_8cpp" startline="11" endline="23">get_move_direction_from_button_keys</referencedby>
        <referencedby refid="button__actions_8hpp_1a147658cb884fa19f4a0a255ea858b7b8" compoundref="button__actions_8cpp" startline="35" endline="43">get_action_name_from_button_keys</referencedby>
      </memberdef>
      <memberdef kind="variable" id="button__actions_8hpp_1a0765116058c6d804c6a3e99a2e55a704" prot="public" static="no" mutable="no">
        <type>sf::Mouse::Button</type>
        <definition>sf::Mouse::Button mouse_key</definition>
        <argsstring></argsstring>
        <name>mouse_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="24" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="button__actions_8hpp_1aa3b9a687b77321bb0bf1bba117df6d51" prot="public" static="no" mutable="no">
        <type>const struct @1</type>
        <definition>const struct @1 skills[]</definition>
        <argsstring>[]</argsstring>
        <name>skills</name>
        <initializer>= {
	{ 	sf::Keyboard::Space, 	sf::Mouse::Left,		&quot;slash&quot;			},
	{ 	sf::Keyboard::Right, 	sf::Mouse::Right,		&quot;cast_spell&quot;	},
	{ 	sf::Keyboard::F,		sf::Mouse::XButton1,	&quot;shoot_arrow&quot;	},
	{ 	sf::Keyboard::Down, 	sf::Mouse::XButton2,	&quot;poke&quot;			}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="32" column="1"/>
        <referencedby refid="button__actions_8hpp_1aac3d825fa7b0f54fd0340a611b9639d5" compoundref="button__actions_8cpp" startline="25" endline="33">get_skill_from_button_keys</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="button__actions_8hpp_1a94ef0400a00795316cd4e374db2af104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f Vector2f_from_Vector2i</definition>
        <argsstring>(sf::Vector2i vector)</argsstring>
        <name>Vector2f_from_Vector2i</name>
        <param>
          <type>sf::Vector2i</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Convert a sf::vector2i to sf::Vector2f. </para>        </briefdescription>
        <detaileddescription>
<para>This method will convert a sf::Vector2i (a vector consisting 2 integer values), <linebreak/>
to a sf::Vector2f (a vector consisting 2 float values). <linebreak/>
</para><para><heading level="2">Parameters: </heading>
</para><para>vector : sf::Vector2f <linebreak/>
-&gt; Position to be converted.</para><para><heading level="2">Return: </heading>
</para><para>Converted sf::Vector2i : sf::Vector2f <linebreak/>
-&gt; Converted vector2i.</para><para><heading level="2">Example: </heading>
</para><para>Vector2f_from_Vector2i({100 : int, 100 : int}) <linebreak/>
-&gt; {100 : float, 100 : float} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="58" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" bodystart="6" bodyend="8"/>
        <referencedby refid="button__actions_8hpp_1a067f53aa6474ce70abccc5bbd28ad01d" compoundref="button__actions_8cpp" startline="46" endline="48">get_mouse_position</referencedby>
      </memberdef>
      <memberdef kind="function" id="button__actions_8hpp_1aac3d825fa7b0f54fd0340a611b9639d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string get_skill_from_button_keys</definition>
        <argsstring>()</argsstring>
        <name>get_skill_from_button_keys</name>
        <briefdescription>
<para>Check if skill button is pressed. </para>        </briefdescription>
        <detaileddescription>
<para>This method will check if one of the buttons in the defined struct of skill_buttons is pressed. <linebreak/>
if that is the case, the method will return the name of the consisting skill. <linebreak/>
</para><para><heading level="2">Return: </heading>
</para><para>skill_name : std::string <linebreak/>
-&gt; name of the skill button that is pressed.</para><para><heading level="2">Example: </heading>
</para><para><ref refid="button__actions_8hpp_1aac3d825fa7b0f54fd0340a611b9639d5" kindref="member">get_skill_from_button_keys()</ref> <linebreak/>
-&gt; &quot;shoot_arrow&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="78" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" bodystart="25" bodyend="33"/>
        <references refid="button__actions_8hpp_1aa3b9a687b77321bb0bf1bba117df6d51">skills</references>
        <referencedby refid="classgame_1a0eb06f984d04128ba7fba6fcca04bda3" compoundref="game_8cpp" startline="236" endline="248">game::get_items_from_database</referencedby>
      </memberdef>
      <memberdef kind="function" id="button__actions_8hpp_1a6a2c7019e201b42b13d3032fc538298d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f get_move_direction_from_button_keys</definition>
        <argsstring>()</argsstring>
        <name>get_move_direction_from_button_keys</name>
        <briefdescription>
<para>Get the move direction if move button is pressed. </para>        </briefdescription>
        <detaileddescription>
<para>This method will check if one of the buttons in the defined struct of move action buttons is pressed. <linebreak/>
if that is the case, the method will return the move direction of the consisting move. <linebreak/>
</para><para><heading level="2">Return: </heading>
</para><para>direction : sf::Vector2f <linebreak/>
-&gt; Direction in which the player should move.<linebreak/>
</para><para><heading level="2">Example: </heading>
</para><para>get_move_direction_from_button_keys <linebreak/>
-&gt; {-1, 0} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="98" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" bodystart="11" bodyend="23"/>
        <references refid="button__actions_8hpp_1a482463c81347dda7bee1190e25bdb0a1">actions</references>
        <referencedby refid="classgame_1a2b80a1fbc6d723e78d3c86d2f8ff24d4" compoundref="game_8cpp" startline="52" endline="96">game::game_loop</referencedby>
        <referencedby refid="classgame_1a0eb06f984d04128ba7fba6fcca04bda3" compoundref="game_8cpp" startline="236" endline="248">game::get_items_from_database</referencedby>
      </memberdef>
      <memberdef kind="function" id="button__actions_8hpp_1a147658cb884fa19f4a0a255ea858b7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string get_action_name_from_button_keys</definition>
        <argsstring>()</argsstring>
        <name>get_action_name_from_button_keys</name>
        <briefdescription>
<para>Get the name of a move if move button is pressed. </para>        </briefdescription>
        <detaileddescription>
<para>This method will return the name from a move if one of the buttons, <linebreak/>
in the defined struct of move action buttons, is pressed. <linebreak/>
</para><para><heading level="2">Return: </heading>
</para><para>direction : sf::Vector2f <linebreak/>
-&gt; Direction in which the player should move.<linebreak/>
</para><para><heading level="2">Example: </heading>
</para><para><ref refid="button__actions_8hpp_1a147658cb884fa19f4a0a255ea858b7b8" kindref="member">get_action_name_from_button_keys()</ref> <linebreak/>
-&gt; &quot;walk_up&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="118" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" bodystart="35" bodyend="43"/>
        <references refid="button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231" compoundref="button__actions_8hpp" startline="7">name</references>
        <references refid="button__actions_8hpp_1a482463c81347dda7bee1190e25bdb0a1">actions</references>
        <referencedby refid="classgame_1a0eb06f984d04128ba7fba6fcca04bda3" compoundref="game_8cpp" startline="236" endline="248">game::get_items_from_database</referencedby>
      </memberdef>
      <memberdef kind="function" id="button__actions_8hpp_1a067f53aa6474ce70abccc5bbd28ad01d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f get_mouse_position</definition>
        <argsstring>(sf::RenderWindow &amp;window)</argsstring>
        <name>get_mouse_position</name>
        <param>
          <type>sf::RenderWindow &amp;</type>
          <declname>window</declname>
        </param>
        <briefdescription>
<para>Get the position of the mouse. </para>        </briefdescription>
        <detaileddescription>
<para>This method will return the position of the mouse on the window. <linebreak/>
</para><para><heading level="2">Parameters: </heading>
</para><para>window : sf::RenderWindow&amp; -&gt; window to check the mouse on.</para><para><heading level="2">Return: </heading>
</para><para>mouse position : sf::Vector2f <linebreak/>
-&gt; Direction in which the player should move.<linebreak/>
</para><para><heading level="2">Example: </heading>
</para><para>get_mouse_position( window) <linebreak/>
-&gt; {100, 100} </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="143" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" bodystart="46" bodyend="48"/>
        <references refid="button__actions_8cpp_1a94ef0400a00795316cd4e374db2af104" compoundref="button__actions_8cpp" startline="6" endline="8">Vector2f_from_Vector2i</references>
        <referencedby refid="classgame_1a2b80a1fbc6d723e78d3c86d2f8ff24d4" compoundref="game_8cpp" startline="52" endline="96">game::game_loop</referencedby>
      </memberdef>
      <memberdef kind="function" id="button__actions_8hpp_1a66f5c6d1b29c823603568294cf3702ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool check_mouse</definition>
        <argsstring>()</argsstring>
        <name>check_mouse</name>
        <briefdescription>
<para>Check if left mouse button is pressed. </para>        </briefdescription>
        <detaileddescription>
<para>This method will check if the left mouse button is pressed. <linebreak/>
If that is the case the function will return true. <linebreak/>
</para><para><heading level="2">Return: </heading>
</para><para>button_pressed : bool <linebreak/>
-&gt; If the mousebutton is pressed.</para><para><heading level="2">Example: </heading>
</para><para><ref refid="button__actions_8hpp_1a66f5c6d1b29c823603568294cf3702ea" kindref="member">check_mouse()</ref> <linebreak/>
-&gt; true </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp" line="163" column="1" bodyfile="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;SFML\Graphics.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6" refid="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" kindref="member">sf::Keyboard::Key</ref><sp/><ref refid="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" kindref="member">Key</ref>;</highlight></codeline>
<codeline lineno="7" refid="button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="8" refid="button__actions_8hpp_1aa4f0d3eebc3c443f9be81bf48561a217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="button__actions_8hpp_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>;<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="button__actions_8hpp_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}<ref refid="button__actions_8hpp_1a482463c81347dda7bee1190e25bdb0a1" kindref="member">actions</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::Left,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_left&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>-2,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::Right,<sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_right&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>+2,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::Up,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_up&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-2<sp/>},</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::Down,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_down&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0,<sp/>+2<sp/>},</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::A,<sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_left&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>-2,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::D,<sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_right&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>+2,<sp/><sp/>0<sp/>},</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::W,<sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_up&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>-2<sp/>},</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>sf::Keyboard::S,<sp/><sp/></highlight><highlight class="stringliteral">&quot;walk_down&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>0,<sp/>+2<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" kindref="member">sf::Keyboard::Key</ref><sp/><ref refid="button__actions_8hpp_1a2e21a2810e34d3df6a08f9ce18ce760d" kindref="member">Key</ref>;</highlight></codeline>
<codeline lineno="24" refid="button__actions_8hpp_1a0765116058c6d804c6a3e99a2e55a704" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Mouse::Button<sp/><ref refid="button__actions_8hpp_1a0765116058c6d804c6a3e99a2e55a704" kindref="member">mouse_key</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="button__actions_8hpp_1a9b45b3e13bd9167aab02e17e08916231" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}<ref refid="button__actions_8hpp_1aa3b9a687b77321bb0bf1bba117df6d51" kindref="member">skills</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>sf::Keyboard::Space,<sp/><sp/><sp/><sp/>sf::Mouse::Left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;slash&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>sf::Keyboard::Right,<sp/><sp/><sp/><sp/>sf::Mouse::Right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;cast_spell&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>sf::Keyboard::F,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Mouse::XButton1,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shoot_arrow&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>sf::Keyboard::Down,<sp/><sp/><sp/><sp/><sp/>sf::Mouse::XButton2,<sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;poke&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="comment">//</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight><highlight class="normal">sf::Vector2f<sp/><ref refid="button__actions_8hpp_1a94ef0400a00795316cd4e374db2af104" kindref="member">Vector2f_from_Vector2i</ref>(sf::Vector2i<sp/>vector);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="comment">//</highlight></codeline>
<codeline lineno="78"><highlight class="comment"></highlight><highlight class="normal">std::string<sp/><ref refid="button__actions_8hpp_1aac3d825fa7b0f54fd0340a611b9639d5" kindref="member">get_skill_from_button_keys</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="comment">//</highlight></codeline>
<codeline lineno="98"><highlight class="comment"></highlight><highlight class="normal">sf::Vector2f<sp/><ref refid="button__actions_8hpp_1a6a2c7019e201b42b13d3032fc538298d" kindref="member">get_move_direction_from_button_keys</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">//</highlight></codeline>
<codeline lineno="118"><highlight class="comment"></highlight><highlight class="normal">std::string<sp/><ref refid="button__actions_8hpp_1a147658cb884fa19f4a0a255ea858b7b8" kindref="member">get_action_name_from_button_keys</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">//</highlight></codeline>
<codeline lineno="143"><highlight class="comment"></highlight><highlight class="normal">sf::Vector2f<sp/><ref refid="button__actions_8hpp_1a067f53aa6474ce70abccc5bbd28ad01d" kindref="member">get_mouse_position</ref>(sf::RenderWindow<sp/>&amp;<sp/>window);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="comment">//</highlight></codeline>
<codeline lineno="163"><highlight class="comment"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="button__actions_8hpp_1a66f5c6d1b29c823603568294cf3702ea" kindref="member">check_mouse</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Documents-(D)/HBO-ICT/jaar2/Blok B/git/game_development/Software/Maingame/src/button_actions.hpp"/>
  </compounddef>
</doxygen>
